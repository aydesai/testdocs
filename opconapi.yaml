openapi: 3.0.1
info:
  title: OPCON REST API
  description: Welcome to the SMA OpCon REST API reference. Use this REST API to interact with the OpCon database.
  version: 20.6.0
paths:
  /api/accesscodes:
    get:
      tags:
        - AccessCodes
      summary: Get a list of access codes based on optional criteria specified
      description: "Sample request (this returns a list of **access codes** by **name** in **descending** order):  \r\n        GET /api/accesscodes?sortby=name:desc"
      parameters:
        - name: Name
          in: query
          schema:
            type: string
            nullable: true
        - name: Ids
          in: query
          schema:
            type: string
            nullable: true
        - name: Limit
          in: query
          schema:
            type: integer
            format: int32
            nullable: true
        - name: Offset
          in: query
          schema:
            type: integer
            format: int32
            nullable: true
        - name: SortOrders
          in: query
          schema:
            type: array
            items:
              type: string
            nullable: true
        - name: AccessibleCodes
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
            nullable: true
        - name: HasAdminAccess
          in: query
          schema:
            type: boolean
        - name: SortBy
          in: query
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccessCode'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    post:
      tags:
        - AccessCodes
      summary: 'Create a new access code and return it with its id, if successful'
      description: "Sample request (this creates a new **access code**):  \r\n    POST /api/accesscodes  \r\n    {  \r\n        \"name\": \"Operator\"\"  \r\n    }"
      requestBody:
        description: An access code
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AccessCode'
          application/json:
            schema:
              $ref: '#/components/schemas/AccessCode'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AccessCode'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessCode'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    options:
      tags:
        - AccessCodes
      responses:
        '200':
          description: Success
  '/api/accesscodes/{id}':
    get:
      tags:
        - AccessCodes
      summary: Get an access code for the id specified
      description: "Sample request (this returns the **access code** with **id = 1**):  \r\n        GET /api/accesscodes/1"
      parameters:
        - name: id
          in: path
          description: The id of the access code you want to get
          required: true
          schema:
            type: integer
            description: The id of the access code you want to get
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessCode'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    put:
      tags:
        - AccessCodes
      summary: Update all properties of the access code specified by the id
      description: "Sample request (this updates the **access code**):  \r\n    PUT /api/accesscodes/1  \r\n    {  \r\n        \"id\": 1,  \r\n        \"name\": \"Operator\"  \r\n    }"
      parameters:
        - name: id
          in: path
          description: The access code id
          required: true
          schema:
            type: integer
            description: The access code id
            format: int32
      requestBody:
        description: The access code
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AccessCode'
          application/json:
            schema:
              $ref: '#/components/schemas/AccessCode'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AccessCode'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessCode'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /api/batchusers:
    options:
      tags:
        - BatchUsers
      responses:
        '200':
          description: Success
    get:
      tags:
        - BatchUsers
      summary: Get a list of batch users based on optional criteria specified
      description: "Sample request (this returns a list of **batch users** by **name** in **descending** order):  \r\n        GET /api/batchusers?sortby=name:desc"
      parameters:
        - name: Limit
          in: query
          schema:
            type: integer
            format: int32
            nullable: true
        - name: Offset
          in: query
          schema:
            type: integer
            format: int32
            nullable: true
        - name: LoginName
          in: query
          schema:
            type: string
            nullable: true
        - name: RoleName
          in: query
          schema:
            type: string
            nullable: true
        - name: IncludeRoles
          in: query
          schema:
            type: boolean
        - name: Ids
          in: query
          schema:
            type: string
            nullable: true
        - name: SortOrder.SortBy
          in: query
          schema:
            type: string
            nullable: true
        - name: SortOrder.IdColumns
          in: query
          schema:
            type: array
            items:
              type: string
            nullable: true
        - name: SortOrder.ValidSortOrders
          in: query
          schema:
            type: array
            items:
              type: string
            nullable: true
        - name: SortOrder.ColumnList
          in: query
          schema:
            type: array
            items:
              type: string
            nullable: true
        - name: SortOrder.SortTypeList
          in: query
          schema:
            type: array
            items:
              type: string
            nullable: true
        - name: Platform
          in: query
          schema:
            type: string
            nullable: true
        - name: PlatformId
          in: query
          schema:
            type: integer
            format: int32
            nullable: true
        - name: SortBy
          in: query
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchUser'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    post:
      tags:
        - BatchUsers
      summary: 'Create a new batch user and return it with its id, if successful'
      description: "Sample request (this creates a new **batch user**):  \r\n    POST /api/batchusers  \r\n    {  \r\n    \"platform\": {  \r\n        \"id\": 3,  \r\n        \"name\": \"Windows\"  \r\n        }  \r\n    \"loginName\": \"TestUser\",  \r\n    \"password\": \"userPassword\"  \r\n    \"roles\": [  \r\n        {  \r\n            \"id\": 1  \r\n        },  \r\n        {  \r\n            \"id\": 2  \r\n        }  \r\n        ]  \r\n    }"
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/BatchUser'
          application/json:
            schema:
              $ref: '#/components/schemas/BatchUser'
          application/*+json:
            schema:
              $ref: '#/components/schemas/BatchUser'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchUser'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '500':
          description: Server Error
  '/api/batchusers/{id}':
    get:
      tags:
        - BatchUsers
      summary: Get a batch user for the id specified
      description: "Sample request (this returns the **batch user** with **id = 1**):  \r\n        GET /api/batchusers/1"
      parameters:
        - name: id
          in: path
          description: The **id** of the **batch user** you want to get
          required: true
          schema:
            type: integer
            description: The **id** of the **batch user** you want to get
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchUser'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '500':
          description: Server Error
    put:
      tags:
        - BatchUsers
      summary: Update all properties of the Batch user specified by the id
      description: "Sample request (this updates the **batch user**):  \r\n    PUT /api/BatchUsers/1  \r\n    {  \r\n        \"platform\": {  \r\n            \"id\": 1,  \r\n            \"name\": \"Windows\"  \r\n        }  \r\n        \"loginName\": \"TestUser\"  \r\n    }"
      parameters:
        - name: id
          in: path
          description: The batch user id
          required: true
          schema:
            type: integer
            description: The batch user id
            format: int32
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/BatchUser'
          application/json:
            schema:
              $ref: '#/components/schemas/BatchUser'
          application/*+json:
            schema:
              $ref: '#/components/schemas/BatchUser'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchUser'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '500':
          description: Server Error
  /api/calendars:
    get:
      tags:
        - Calendars
      summary: Get a list of calendars based on optional criteria specified
      description: "Sample request (this returns a list of **calendars** by **name** in **descending** order):  \r\n        GET /api/calendars?sortby=name:desc"
      parameters:
        - name: Name
          in: query
          schema:
            type: string
            nullable: true
        - name: Ids
          in: query
          schema:
            type: string
            nullable: true
        - name: Limit
          in: query
          schema:
            type: integer
            format: int32
            nullable: true
        - name: Offset
          in: query
          schema:
            type: integer
            format: int32
            nullable: true
        - name: SortOrders
          in: query
          schema:
            type: array
            items:
              type: string
            nullable: true
        - name: HasAdminAccess
          in: query
          schema:
            type: boolean
        - name: SortBy
          in: query
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Calendar'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    post:
      tags:
        - Calendars
      summary: 'Create a new calendar and return it with its id, if successful'
      description: "Sample request (this creates a new **calendar**):  \r\n    POST /api/calendars  \r\n    {  \r\n        \"name\": \"CalendarName\"\"  \r\n    }"
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Calendar'
          application/json:
            schema:
              $ref: '#/components/schemas/Calendar'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Calendar'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Calendar'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    options:
      tags:
        - Calendars
      responses:
        '200':
          description: Success
  '/api/calendars/{id}':
    get:
      tags:
        - Calendars
      summary: Get a calendar for the id specified
      description: "Sample request (this returns the **calendar** with **id=1** ):  \r\n        GET /api/calendars/1"
      parameters:
        - name: id
          in: path
          description: ''
          required: true
          schema:
            type: integer
            description: ''
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Calendar'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    put:
      tags:
        - Calendars
      summary: Update all properties of the calendar specified by the id
      description: "Sample request (this updates the **calendar**):  \r\n    PUT /api/calendar/1  \r\n    {  \r\n        \"id\": 1,  \r\n        \"name\": \"CalendarName\"\r\n            \r\n    }"
      parameters:
        - name: id
          in: path
          description: The calendar id
          required: true
          schema:
            type: integer
            description: The calendar id
            format: int32
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Calendar'
          application/json:
            schema:
              $ref: '#/components/schemas/Calendar'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Calendar'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Calendar'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /api/dailygraphedges:
    get:
      tags:
        - DailyGraphEdges
      parameters:
        - name: ScheduleIds
          in: query
          schema:
            type: string
            nullable: true
        - name: Level
          in: query
          schema:
            type: integer
            format: int32
            nullable: true
        - name: JobIds
          in: query
          schema:
            type: string
            nullable: true
        - name: ScheduleDates
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
            nullable: true
        - name: Dates
          in: query
          schema:
            type: string
            nullable: true
        - name: PredecessorLevel
          in: query
          schema:
            type: integer
            format: int32
            nullable: true
        - name: SuccessorLevel
          in: query
          schema:
            type: integer
            format: int32
            nullable: true
      responses:
        '200':
          description: Success
    options:
      tags:
        - DailyGraphEdges
      responses:
        '200':
          description: Success
  '/api/dailygraphedges/{id}':
    get:
      tags:
        - DailyGraphEdges
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            nullable: true
        - name: ScheduleIds
          in: query
          schema:
            type: string
            nullable: true
        - name: Level
          in: query
          schema:
            type: integer
            format: int32
            nullable: true
        - name: JobIds
          in: query
          schema:
            type: string
            nullable: true
        - name: ScheduleDates
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
            nullable: true
        - name: Dates
          in: query
          schema:
            type: string
            nullable: true
        - name: PredecessorLevel
          in: query
          schema:
            type: integer
            format: int32
            nullable: true
        - name: SuccessorLevel
          in: query
          schema:
            type: integer
            format: int32
            nullable: true
      responses:
        '200':
          description: Success
  '/api/dailyJobs/{jobId}/events':
    get:
      tags:
        - DailyJobEvent
      summary: Get a list of daily job events
      description: "Sample request (this returns a list of **daily job events** in **descending** order):  \r\n        GET /api/dailyJobs/{jobId}/events"
      parameters:
        - name: ScheduleId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: Instance
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: ScheduleDate
          in: path
          required: true
          schema:
            type: string
            format: date-time
        - name: JobName
          in: path
          required: true
          schema:
            type: string
            nullable: true
        - name: Id
          in: path
          required: true
          schema:
            type: string
            nullable: true
        - name: jobId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DailyJobEventModel'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    post:
      tags:
        - DailyJobEvent
      summary: Post a new daily job event
      description: " Sample request(this creates a single** daily job event**):  \r\n         POST /api/dailyJobs/{jobId}/events/\r\n         {\r\n             \"job\": {\r\n                 \"id\": \"20210712|6000|1|Unix1\"\r\n             },\r\n             \"user\": {\r\n                 \"id\": 0,\r\n                 \"name\": \"ocadm\"\r\n             },\r\n             \"trigger\": {\r\n                 \"type\": \"Status\",\r\n                 \"id\": 900,\r\n                 \"name\": \"Finished OK\"\r\n             },\r\n             \"event\": {\r\n                 \"type\": \"$CONSOLE:DISPLAY\",\r\n             \"parameters\": {\r\n                 \"message\": \"HELLO\"\r\n                 }\r\n             },\r\n             \"frequency\": {\r\n                 \"name\": \"********\"\r\n      }\r\n}"
      parameters:
        - name: ScheduleId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: Instance
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: ScheduleDate
          in: path
          required: true
          schema:
            type: string
            format: date-time
        - name: JobName
          in: path
          required: true
          schema:
            type: string
            nullable: true
        - name: Id
          in: path
          required: true
          schema:
            type: string
            nullable: true
        - name: jobId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DailyJobEventModel'
          application/json:
            schema:
              $ref: '#/components/schemas/DailyJobEventModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DailyJobEventModel'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DailyJobEventModel'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    put:
      tags:
        - DailyJobEvent
      summary: Put a daily job event
      description: " Sample request(this updates a single** daily job event**):  \r\n         PUT /api/dailyJobs/{jobId}/events/\r\n         {\r\n             \"job\": {\r\n                 \"id\": \"20210712|6000|1|Unix1\"\r\n             },\r\n             \"user\": {\r\n                 \"id\": 0,\r\n                 \"name\": \"ocadm\"\r\n             },\r\n             \"trigger\": {\r\n                 \"type\": \"Status\",\r\n                 \"id\": 900,\r\n                 \"name\": \"Finished OK\"\r\n             },\r\n             \"event\": {\r\n                 \"type\": \"$CONSOLE:DISPLAY\",\r\n             \"parameters\": {\r\n                 \"message\": \"HELLO\"\r\n                 }\r\n             },\r\n             \"frequency\": {\r\n                 \"name\": \"********\"\r\n      }\r\n}\r\n To support legacy architecture, this returns the object as well."
      parameters:
        - name: ScheduleId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: Instance
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: ScheduleDate
          in: path
          required: true
          schema:
            type: string
            format: date-time
        - name: JobName
          in: path
          required: true
          schema:
            type: string
            nullable: true
        - name: Id
          in: path
          required: true
          schema:
            type: string
            nullable: true
        - name: jobId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DailyJobEventModel'
          application/json:
            schema:
              $ref: '#/components/schemas/DailyJobEventModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DailyJobEventModel'
      responses:
        '204':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DailyJobEventModel'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    options:
      tags:
        - DailyJobEvent
      parameters:
        - name: jobId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
  '/api/dailyJobs/{jobId}/events/{eventId}':
    delete:
      tags:
        - DailyJobEvent
      summary: Deletes daily job event
      description: "Sample request (this deletes a single **daily job event**):  \r\n        DELETE /api/dailyJobs/{jobId}/events/{eventId}"
      parameters:
        - name: ScheduleId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: Instance
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: ScheduleDate
          in: path
          required: true
          schema:
            type: string
            format: date-time
        - name: JobName
          in: path
          required: true
          schema:
            type: string
            nullable: true
        - name: Id
          in: path
          required: true
          schema:
            type: string
            nullable: true
        - name: eventId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: jobId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Success
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /api/dailyjobs:
    get:
      tags:
        - DailyJobs
      parameters:
        - name: Uids
          in: query
          schema:
            type: string
            nullable: true
        - name: IncludeDocumentation
          in: query
          schema:
            type: boolean
        - name: IncludeThresholdResourceDependencies
          in: query
          schema:
            type: boolean
        - name: IncludeThresholdResourceUpdates
          in: query
          schema:
            type: boolean
        - name: IncludeExpressionDependencies
          in: query
          schema:
            type: boolean
        - name: IncludeDependencies
          in: query
          schema:
            type: boolean
        - name: IncludeCount
          in: query
          schema:
            type: boolean
        - name: IncludeDetails
          in: query
          schema:
            type: boolean
        - name: IncludeEvents
          in: query
          schema:
            type: boolean
        - name: TerminationDescription
          in: query
          schema:
            type: string
            nullable: true
        - name: JobName
          in: query
          schema:
            type: string
            nullable: true
        - name: Machine
          in: query
          schema:
            type: string
            nullable: true
        - name: StartMachine
          in: query
          schema:
            type: string
            nullable: true
        - name: PrimaryMachine
          in: query
          schema:
            type: string
            nullable: true
        - name: AlternateMachine
          in: query
          schema:
            type: string
            nullable: true
        - name: AlternateMachine2
          in: query
          schema:
            type: string
            nullable: true
        - name: AlternateMachine3
          in: query
          schema:
            type: string
            nullable: true
        - name: Reason
          in: query
          schema:
            type: string
            nullable: true
        - name: ScheduleDates
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
            nullable: true
        - name: SortOrders
          in: query
          schema:
            type: array
            items:
              type: string
            nullable: true
        - name: JobStatus
          in: query
          schema:
            type: string
            nullable: true
        - name: JobStatusCategories
          in: query
          schema:
            type: array
            items:
              type: string
            nullable: true
        - name: JobType
          in: query
          schema:
            type: string
            nullable: true
        - name: PriorityValue
          in: query
          schema:
            type: integer
            format: int32
            nullable: true
        - name: ScheduleStatus
          in: query
          schema:
            type: string
            nullable: true
        - name: ScheduleName
          in: query
          schema:
            type: string
            nullable: true
        - name: Path
          in: query
          schema:
            type: string
            nullable: true
        - name: TagList
          in: query
          schema:
            type: array
            items:
              type: string
            nullable: true
        - name: LimitValue
          in: query
          schema:
            type: integer
            format: int32
            nullable: true
        - name: OffsetValue
          in: query
          schema:
            type: integer
            format: int32
            nullable: true
        - name: DepartmentList
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
            nullable: true
        - name: AccessCodeList
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
            nullable: true
        - name: JobNumber
          in: query
          schema:
            type: integer
            format: int32
            nullable: true
        - name: Ids
          in: query
          schema:
            type: string
            nullable: true
        - name: ScheduleIds
          in: query
          schema:
            type: string
            nullable: true
        - name: Name
          in: query
          schema:
            type: string
            nullable: true
        - name: Dates
          in: query
          schema:
            type: string
            nullable: true
        - name: Status
          in: query
          schema:
            type: string
            nullable: true
        - name: SortBy
          in: query
          schema:
            type: string
            nullable: true
        - name: Priority
          in: query
          schema:
            type: string
            nullable: true
        - name: AccessCodeIds
          in: query
          schema:
            type: string
            nullable: true
        - name: Limit
          in: query
          schema:
            type: string
            nullable: true
        - name: Offset
          in: query
          schema:
            type: string
            nullable: true
        - name: Tags
          in: query
          schema:
            type: string
            nullable: true
        - name: Categories
          in: query
          schema:
            type: string
            nullable: true
        - name: DepartmentIds
          in: query
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: Success
    options:
      tags:
        - DailyJobs
      responses:
        '200':
          description: Success
  '/api/dailyjobs/{rawId}':
    get:
      tags:
        - DailyJobs
      parameters:
        - name: rawId
          in: path
          required: true
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: Success
    put:
      tags:
        - DailyJobs
      parameters:
        - name: rawId
          in: path
          required: true
          schema:
            type: string
            nullable: true
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DailyJob'
          application/json:
            schema:
              $ref: '#/components/schemas/DailyJob'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DailyJob'
      responses:
        '200':
          description: Success
  /api/dailyjobs/count:
    get:
      tags:
        - DailyJobs
      parameters:
        - name: Uids
          in: query
          schema:
            type: string
            nullable: true
        - name: IncludeDocumentation
          in: query
          schema:
            type: boolean
        - name: IncludeThresholdResourceDependencies
          in: query
          schema:
            type: boolean
        - name: IncludeThresholdResourceUpdates
          in: query
          schema:
            type: boolean
        - name: IncludeExpressionDependencies
          in: query
          schema:
            type: boolean
        - name: IncludeDependencies
          in: query
          schema:
            type: boolean
        - name: IncludeCount
          in: query
          schema:
            type: boolean
        - name: IncludeDetails
          in: query
          schema:
            type: boolean
        - name: IncludeEvents
          in: query
          schema:
            type: boolean
        - name: TerminationDescription
          in: query
          schema:
            type: string
            nullable: true
        - name: JobName
          in: query
          schema:
            type: string
            nullable: true
        - name: Machine
          in: query
          schema:
            type: string
            nullable: true
        - name: StartMachine
          in: query
          schema:
            type: string
            nullable: true
        - name: PrimaryMachine
          in: query
          schema:
            type: string
            nullable: true
        - name: AlternateMachine
          in: query
          schema:
            type: string
            nullable: true
        - name: AlternateMachine2
          in: query
          schema:
            type: string
            nullable: true
        - name: AlternateMachine3
          in: query
          schema:
            type: string
            nullable: true
        - name: Reason
          in: query
          schema:
            type: string
            nullable: true
        - name: ScheduleDates
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
            nullable: true
        - name: SortOrders
          in: query
          schema:
            type: array
            items:
              type: string
            nullable: true
        - name: JobStatus
          in: query
          schema:
            type: string
            nullable: true
        - name: JobStatusCategories
          in: query
          schema:
            type: array
            items:
              type: string
            nullable: true
        - name: JobType
          in: query
          schema:
            type: string
            nullable: true
        - name: PriorityValue
          in: query
          schema:
            type: integer
            format: int32
            nullable: true
        - name: ScheduleStatus
          in: query
          schema:
            type: string
            nullable: true
        - name: ScheduleName
          in: query
          schema:
            type: string
            nullable: true
        - name: Path
          in: query
          schema:
            type: string
            nullable: true
        - name: TagList
          in: query
          schema:
            type: array
            items:
              type: string
            nullable: true
        - name: LimitValue
          in: query
          schema:
            type: integer
            format: int32
            nullable: true
        - name: OffsetValue
          in: query
          schema:
            type: integer
            format: int32
            nullable: true
        - name: DepartmentList
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
            nullable: true
        - name: AccessCodeList
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
            nullable: true
        - name: JobNumber
          in: query
          schema:
            type: integer
            format: int32
            nullable: true
        - name: Ids
          in: query
          schema:
            type: string
            nullable: true
        - name: ScheduleIds
          in: query
          schema:
            type: string
            nullable: true
        - name: Name
          in: query
          schema:
            type: string
            nullable: true
        - name: Dates
          in: query
          schema:
            type: string
            nullable: true
        - name: Status
          in: query
          schema:
            type: string
            nullable: true
        - name: SortBy
          in: query
          schema:
            type: string
            nullable: true
        - name: Priority
          in: query
          schema:
            type: string
            nullable: true
        - name: AccessCodeIds
          in: query
          schema:
            type: string
            nullable: true
        - name: Limit
          in: query
          schema:
            type: string
            nullable: true
        - name: Offset
          in: query
          schema:
            type: string
            nullable: true
        - name: Tags
          in: query
          schema:
            type: string
            nullable: true
        - name: Categories
          in: query
          schema:
            type: string
            nullable: true
        - name: DepartmentIds
          in: query
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: Success
  /api/dailyjobs/count_by_status:
    get:
      tags:
        - DailyJobs
      parameters:
        - name: Uids
          in: query
          schema:
            type: string
            nullable: true
        - name: IncludeDocumentation
          in: query
          schema:
            type: boolean
        - name: IncludeThresholdResourceDependencies
          in: query
          schema:
            type: boolean
        - name: IncludeThresholdResourceUpdates
          in: query
          schema:
            type: boolean
        - name: IncludeExpressionDependencies
          in: query
          schema:
            type: boolean
        - name: IncludeDependencies
          in: query
          schema:
            type: boolean
        - name: IncludeCount
          in: query
          schema:
            type: boolean
        - name: IncludeDetails
          in: query
          schema:
            type: boolean
        - name: IncludeEvents
          in: query
          schema:
            type: boolean
        - name: TerminationDescription
          in: query
          schema:
            type: string
            nullable: true
        - name: JobName
          in: query
          schema:
            type: string
            nullable: true
        - name: Machine
          in: query
          schema:
            type: string
            nullable: true
        - name: StartMachine
          in: query
          schema:
            type: string
            nullable: true
        - name: PrimaryMachine
          in: query
          schema:
            type: string
            nullable: true
        - name: AlternateMachine
          in: query
          schema:
            type: string
            nullable: true
        - name: AlternateMachine2
          in: query
          schema:
            type: string
            nullable: true
        - name: AlternateMachine3
          in: query
          schema:
            type: string
            nullable: true
        - name: Reason
          in: query
          schema:
            type: string
            nullable: true
        - name: ScheduleDates
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
            nullable: true
        - name: SortOrders
          in: query
          schema:
            type: array
            items:
              type: string
            nullable: true
        - name: JobStatus
          in: query
          schema:
            type: string
            nullable: true
        - name: JobStatusCategories
          in: query
          schema:
            type: array
            items:
              type: string
            nullable: true
        - name: JobType
          in: query
          schema:
            type: string
            nullable: true
        - name: PriorityValue
          in: query
          schema:
            type: integer
            format: int32
            nullable: true
        - name: ScheduleStatus
          in: query
          schema:
            type: string
            nullable: true
        - name: ScheduleName
          in: query
          schema:
            type: string
            nullable: true
        - name: Path
          in: query
          schema:
            type: string
            nullable: true
        - name: TagList
          in: query
          schema:
            type: array
            items:
              type: string
            nullable: true
        - name: LimitValue
          in: query
          schema:
            type: integer
            format: int32
            nullable: true
        - name: OffsetValue
          in: query
          schema:
            type: integer
            format: int32
            nullable: true
        - name: DepartmentList
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
            nullable: true
        - name: AccessCodeList
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
            nullable: true
        - name: JobNumber
          in: query
          schema:
            type: integer
            format: int32
            nullable: true
        - name: Ids
          in: query
          schema:
            type: string
            nullable: true
        - name: ScheduleIds
          in: query
          schema:
            type: string
            nullable: true
        - name: Name
          in: query
          schema:
            type: string
            nullable: true
        - name: Dates
          in: query
          schema:
            type: string
            nullable: true
        - name: Status
          in: query
          schema:
            type: string
            nullable: true
        - name: SortBy
          in: query
          schema:
            type: string
            nullable: true
        - name: Priority
          in: query
          schema:
            type: string
            nullable: true
        - name: AccessCodeIds
          in: query
          schema:
            type: string
            nullable: true
        - name: Limit
          in: query
          schema:
            type: string
            nullable: true
        - name: Offset
          in: query
          schema:
            type: string
            nullable: true
        - name: Tags
          in: query
          schema:
            type: string
            nullable: true
        - name: Categories
          in: query
          schema:
            type: string
            nullable: true
        - name: DepartmentIds
          in: query
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: Success
  '/api/dailyjobs/{rawId}/documentation':
    get:
      tags:
        - DailyJobs
      parameters:
        - name: rawId
          in: path
          required: true
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: Success
    post:
      tags:
        - DailyJobs
      parameters:
        - name: rawId
          in: path
          required: true
          schema:
            type: string
            nullable: true
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DailyJobDocumentation'
          application/json:
            schema:
              $ref: '#/components/schemas/DailyJobDocumentation'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DailyJobDocumentation'
      responses:
        '200':
          description: Success
  '/api/dailyjobs/{rawId}/documentation/{documentationId}':
    get:
      tags:
        - DailyJobs
      parameters:
        - name: rawId
          in: path
          required: true
          schema:
            type: string
            nullable: true
        - name: documentationId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
    put:
      tags:
        - DailyJobs
      parameters:
        - name: rawId
          in: path
          required: true
          schema:
            type: string
            nullable: true
        - name: documentationId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DailyJobDocumentation'
          application/json:
            schema:
              $ref: '#/components/schemas/DailyJobDocumentation'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DailyJobDocumentation'
      responses:
        '200':
          description: Success
    delete:
      tags:
        - DailyJobs
      parameters:
        - name: rawId
          in: path
          required: true
          schema:
            type: string
            nullable: true
        - name: documentationId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
  '/api/dailyjobs/{uid}/incidentTickets':
    get:
      tags:
        - DailyJobs
      parameters:
        - name: uid
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Success
    post:
      tags:
        - DailyJobs
      parameters:
        - name: uid
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DailyJobIncidentTicket'
          application/json:
            schema:
              $ref: '#/components/schemas/DailyJobIncidentTicket'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DailyJobIncidentTicket'
      responses:
        '200':
          description: Success
  '/api/dailyjobs/{jId}/status':
    get:
      tags:
        - DailyJobs
      parameters:
        - name: jId
          in: path
          required: true
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: Success
  '/api/dailyjobs/{rawId}/properties':
    get:
      tags:
        - DailyJobs
      parameters:
        - name: rawId
          in: path
          required: true
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: Success
    post:
      tags:
        - DailyJobs
      parameters:
        - name: rawId
          in: path
          required: true
          schema:
            type: string
            nullable: true
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/InstanceProperty'
          application/json:
            schema:
              $ref: '#/components/schemas/InstanceProperty'
          application/*+json:
            schema:
              $ref: '#/components/schemas/InstanceProperty'
      responses:
        '200':
          description: Success
  '/api/dailyjobs/{rawId}/properties/{name}':
    get:
      tags:
        - DailyJobs
      parameters:
        - name: rawId
          in: path
          required: true
          schema:
            type: string
            nullable: true
        - name: name
          in: path
          required: true
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: Success
    put:
      tags:
        - DailyJobs
      parameters:
        - name: rawId
          in: path
          required: true
          schema:
            type: string
            nullable: true
        - name: name
          in: path
          required: true
          schema:
            type: string
            nullable: true
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/InstanceProperty'
          application/json:
            schema:
              $ref: '#/components/schemas/InstanceProperty'
          application/*+json:
            schema:
              $ref: '#/components/schemas/InstanceProperty'
      responses:
        '200':
          description: Success
    delete:
      tags:
        - DailyJobs
      parameters:
        - name: rawId
          in: path
          required: true
          schema:
            type: string
            nullable: true
        - name: name
          in: path
          required: true
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: Success
  '/api/dailyjobs/{uid}/incidentTickets/{id}':
    put:
      tags:
        - DailyJobs
      parameters:
        - name: uid
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: id
          in: path
          required: true
          schema:
            type: string
            nullable: true
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DailyJobIncidentTicket'
          application/json:
            schema:
              $ref: '#/components/schemas/DailyJobIncidentTicket'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DailyJobIncidentTicket'
      responses:
        '200':
          description: Success
    delete:
      tags:
        - DailyJobs
      parameters:
        - name: uid
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: id
          in: path
          required: true
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: Success
  '/api/dailyjobs/{rawId}/events':
    get:
      tags:
        - DailyJobs
      parameters:
        - name: rawId
          in: path
          required: true
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: Success
    post:
      tags:
        - DailyJobs
      parameters:
        - name: rawId
          in: path
          required: true
          schema:
            type: string
            nullable: true
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/OpConEvent'
          application/json:
            schema:
              $ref: '#/components/schemas/OpConEvent'
          application/*+json:
            schema:
              $ref: '#/components/schemas/OpConEvent'
      responses:
        '200':
          description: Success
  '/api/dailyjobs/{rawId}/events/{eventId}':
    get:
      tags:
        - DailyJobs
      parameters:
        - name: rawId
          in: path
          required: true
          schema:
            type: string
            nullable: true
        - name: eventId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
  '/api/dailyjobs/{rawId}/Eventcollections/{eventId}':
    put:
      tags:
        - DailyJobs
      parameters:
        - name: rawId
          in: path
          required: true
          schema:
            type: string
            nullable: true
        - name: eventId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/OpConEvent'
          application/json:
            schema:
              $ref: '#/components/schemas/OpConEvent'
          application/*+json:
            schema:
              $ref: '#/components/schemas/OpConEvent'
      responses:
        '200':
          description: Success
  '/api/dailyjobs/{rawId}/Eventcollections/{EventGroupId}':
    delete:
      tags:
        - DailyJobs
      parameters:
        - name: rawId
          in: path
          required: true
          schema:
            type: string
            nullable: true
        - name: eventId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: EventGroupId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
  '/api/dailyjobs/{rawId}/expressionDependencies':
    get:
      tags:
        - DailyJobs
      summary: Get a list of daily job expression dependencies
      description: "Sample request (this returns a list of **expression dependencies** in **ascending** order):  \r\n        GET /api/dailyJobs/{dailyJobId}/expressionDependencies"
      parameters:
        - name: rawId
          in: path
          description: The daily job unique identifier
          required: true
          schema:
            type: string
            description: The daily job unique identifier
            nullable: true
      responses:
        '200':
          description: Success
    post:
      tags:
        - DailyJobs
      summary: Post a single expression dependencies
      description: "Sample request (this creates a single **expression dependency**):  \r\n        POST /api/dailyJobs/{dailyJobId}/expressionDependencies/\r\n        {\r\n            \"expression1\": \"someExpression\",\r\n            \"expression2\": \"expressionTwo\"\r\n        }"
      parameters:
        - name: rawId
          in: path
          description: The daily job indentifier
          required: true
          schema:
            type: string
            description: The daily job indentifier
            nullable: true
      requestBody:
        description: The expression dependency object with new values
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DailyJobExpressionDependencyCollection'
          application/json:
            schema:
              $ref: '#/components/schemas/DailyJobExpressionDependencyCollection'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DailyJobExpressionDependencyCollection'
      responses:
        '200':
          description: Success
  '/api/dailyjobs/{rawId}/expressionDependencies/{expressionId}':
    get:
      tags:
        - DailyJobs
      summary: Get a daily job expression dependency for the id specified
      description: "Sample request (this returns a **expression dependency** in **ascending** order):  \r\n        GET /api/dailyJobs/{dailyJobId}/expressionDependencies/{expressionId}"
      parameters:
        - name: rawId
          in: path
          description: The daily job identifier
          required: true
          schema:
            type: string
            description: The daily job identifier
            nullable: true
        - name: expressionId
          in: path
          description: The expression dependency identifier
          required: true
          schema:
            type: integer
            description: The expression dependency identifier
            format: int32
      responses:
        '200':
          description: Success
    put:
      tags:
        - DailyJobs
      summary: Put a single expression dependencies
      description: "Sample request (this updates a single **expression dependency**):  \r\n        PUT /api/dailyJobs/{dailyJobId}/expressionDependencies/{expressionId}\r\n        {\r\n            \"id\": 1,\r\n            \"expression1\": \"someExpression\",\r\n            \"expression2\": \"expressionTwo\"\r\n        }"
      parameters:
        - name: rawId
          in: path
          description: The daily job indentifier
          required: true
          schema:
            type: string
            description: The daily job indentifier
            nullable: true
        - name: expressionId
          in: path
          description: The expression dependency identifier
          required: true
          schema:
            type: integer
            description: The expression dependency identifier
            format: int32
      requestBody:
        description: The expression dependency object with update values
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DailyJobExpressionDependencyCollection'
          application/json:
            schema:
              $ref: '#/components/schemas/DailyJobExpressionDependencyCollection'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DailyJobExpressionDependencyCollection'
      responses:
        '200':
          description: Success
    delete:
      tags:
        - DailyJobs
      summary: Deletes a single expression dependencies
      description: "Sample request (this deletes a single **expression dependency**):  \r\n        DELETE /api/dailyJobs/{dailyJobId}/expressionDependencies/{expressionId}"
      parameters:
        - name: rawId
          in: path
          description: The daily job indentifier
          required: true
          schema:
            type: string
            description: The daily job indentifier
            nullable: true
        - name: expressionId
          in: path
          description: The expression dependency identifier
          required: true
          schema:
            type: integer
            description: The expression dependency identifier
            format: int32
      requestBody:
        description: The expression dependency object with values to delete
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DailyJobExpressionDependencyCollection'
          application/json:
            schema:
              $ref: '#/components/schemas/DailyJobExpressionDependencyCollection'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DailyJobExpressionDependencyCollection'
      responses:
        '200':
          description: Success
  '/api/dailyjobs/{rawId}/resourceDependencies':
    get:
      tags:
        - DailyJobs
      parameters:
        - name: rawId
          in: path
          required: true
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: Success
    post:
      tags:
        - DailyJobs
      parameters:
        - name: rawId
          in: path
          required: true
          schema:
            type: string
            nullable: true
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DailyJobResourceDependency'
          application/json:
            schema:
              $ref: '#/components/schemas/DailyJobResourceDependency'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DailyJobResourceDependency'
      responses:
        '200':
          description: Success
  '/api/dailyjobs/{rawId}/resourceDependencies/{resourceId}':
    get:
      tags:
        - DailyJobs
      parameters:
        - name: rawId
          in: path
          required: true
          schema:
            type: string
            nullable: true
        - name: resourceId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
    put:
      tags:
        - DailyJobs
      parameters:
        - name: rawId
          in: path
          required: true
          schema:
            type: string
            nullable: true
        - name: resourceId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DailyJobResourceDependency'
          application/json:
            schema:
              $ref: '#/components/schemas/DailyJobResourceDependency'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DailyJobResourceDependency'
      responses:
        '200':
          description: Success
    delete:
      tags:
        - DailyJobs
      parameters:
        - name: rawId
          in: path
          required: true
          schema:
            type: string
            nullable: true
        - name: resourceId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
  '/api/dailyjobs/{rawId}/thresholdDependencies':
    get:
      tags:
        - DailyJobs
      parameters:
        - name: rawId
          in: path
          required: true
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: Success
    post:
      tags:
        - DailyJobs
      parameters:
        - name: rawId
          in: path
          required: true
          schema:
            type: string
            nullable: true
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DailyJobThresholdDependency'
          application/json:
            schema:
              $ref: '#/components/schemas/DailyJobThresholdDependency'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DailyJobThresholdDependency'
      responses:
        '200':
          description: Success
  '/api/dailyjobs/{rawId}/thresholdDependencies/{thresholdId}':
    get:
      tags:
        - DailyJobs
      parameters:
        - name: rawId
          in: path
          required: true
          schema:
            type: string
            nullable: true
        - name: thresholdId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
    put:
      tags:
        - DailyJobs
      parameters:
        - name: rawId
          in: path
          required: true
          schema:
            type: string
            nullable: true
        - name: thresholdId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DailyJobThresholdDependency'
          application/json:
            schema:
              $ref: '#/components/schemas/DailyJobThresholdDependency'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DailyJobThresholdDependency'
      responses:
        '200':
          description: Success
    delete:
      tags:
        - DailyJobs
      parameters:
        - name: rawId
          in: path
          required: true
          schema:
            type: string
            nullable: true
        - name: thresholdId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
  '/api/dailyjobs/{jobId}/dependencies':
    get:
      tags:
        - DailyJobsDependencies
      summary: Get a list of job dependencies for the daily job specified
      description: "Sample request (this returns a list of **job dependencies** for a daily job with id '20210101|15|1|Job1'):  \r\n    GET /api/dailyjobs/20210101|15|1|Job1/dependencies"
      parameters:
        - name: jobId
          in: path
          required: true
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DailyJobDependency'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    put:
      tags:
        - DailyJobsDependencies
      summary: Update the job dependencies for the daily job specified
      description: "Sample request (this updates the **job dependencies** for a daily job with id '20210101|15|1|Job1'):  \r\n    PUT /api/dailyjobs/20210101|15|1|Job1/dependencies\r\n    [\r\n        {\r\n            \"type\": {\r\n                \"name\": \"After\",\r\n                \"condition\": \"Failed\",\r\n                \"offset\": 0\r\n            },\r\n            \"predecessor\": {\r\n                \"schedule\": {\r\n                    \"name\": \"SimpleSchedule\"\r\n                },\r\n                \"name\": \"SimpleJob1\"\r\n            }\r\n        }\r\n    ]"
      parameters:
        - name: jobId
          in: path
          required: true
          schema:
            type: string
            nullable: true
      requestBody:
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/DailyJobDependency'
              nullable: true
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/DailyJobDependency'
              nullable: true
          application/*+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/DailyJobDependency'
              nullable: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DailyJobDependency'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    post:
      tags:
        - DailyJobsDependencies
      summary: Add a job dependency for the daily job specified
      description: "Sample request (this adds a **job dependency** for a daily job with id '20210101|15|1|Job1'):  \r\n    POST /api/dailyjobs/20210101|15|1|Job1/dependencies\r\n    {\r\n        \"type\": {\r\n            \"name\": \"After\",\r\n            \"condition\": \"Failed\",\r\n            \"offset\": 0\r\n        },\r\n        \"predecessor\": {\r\n            \"schedule\": {\r\n                \"name\": \"SimpleSchedule\"\r\n            },\r\n            \"name\": \"SimpleJob1\"\r\n        }\r\n    }"
      parameters:
        - name: jobId
          in: path
          required: true
          schema:
            type: string
            nullable: true
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DailyJobDependency'
          application/json:
            schema:
              $ref: '#/components/schemas/DailyJobDependency'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DailyJobDependency'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DailyJobDependency'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    options:
      tags:
        - DailyJobsDependencies
      parameters:
        - name: jobId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
  '/api/dailyjobs/{jobId}/dependencies/{id}':
    get:
      tags:
        - DailyJobsDependencies
      summary: Get a job dependency for the daily job and job dependency id specified
      description: "Sample request (this returns a **job dependency** with id '2' for a daily job with id '20210101|15|1|Job1'):  \r\n    GET /api/dailyjobs/20210101|15|1|Job1/dependencies/2"
      parameters:
        - name: jobId
          in: path
          required: true
          schema:
            type: string
            nullable: true
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DailyJobDependency'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    put:
      tags:
        - DailyJobsDependencies
      summary: Update a job dependency for the daily job and job dependency id specified
      description: "Sample request (this updates a **job dependency** with id '2' for a daily job with id '20210101|15|1|Job1'):  \r\n    PUT /api/dailyjobs/20210101|15|1|Job1/dependencies/2\r\n    {\r\n        \"type\": {\r\n            \"name\": \"Conflict\",\r\n            \"jobNameLike\": \"Simple\",\r\n            \"offset\": -1\r\n        },\r\n        \"predecessor\": {\r\n            \"schedule\": {\r\n                \"name\": \"SimpleSchedule\"\r\n            },\r\n            \"name\": \"SimpleJob1\""
      parameters:
        - name: jobId
          in: path
          required: true
          schema:
            type: string
            nullable: true
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DailyJobDependency'
          application/json:
            schema:
              $ref: '#/components/schemas/DailyJobDependency'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DailyJobDependency'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DailyJobDependency'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    delete:
      tags:
        - DailyJobsDependencies
      summary: Delete a job dependency with the daily job and job dependency id specified
      description: "Sample request (this deletes a **job dependency** with id '2' for a daily job with id '20210101|15|1|Job1'):  \r\n    DELETE /api/dailyjobs/20210101|15|1|Job1/dependencies/2"
      parameters:
        - name: jobId
          in: path
          required: true
          schema:
            type: string
            nullable: true
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Success
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApiError'
  /api/dailyschedules/count_by_status:
    get:
      tags:
        - DailySchedules
      parameters:
        - name: uids
          in: query
          schema:
            type: string
            nullable: true
        - name: SortOrders
          in: query
          schema:
            type: array
            items:
              type: string
            nullable: true
        - name: ScheduleDates
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
            nullable: true
        - name: ScheduleCategories
          in: query
          schema:
            type: array
            items:
              type: string
            nullable: true
        - name: Ids
          in: query
          schema:
            type: string
            nullable: true
        - name: Name
          in: query
          schema:
            type: string
            nullable: true
        - name: Status
          in: query
          schema:
            type: string
            nullable: true
        - name: Categories
          in: query
          schema:
            type: string
            nullable: true
        - name: FailedJobs
          in: query
          schema:
            type: boolean
            nullable: true
        - name: Offset
          in: query
          schema:
            type: integer
            format: int32
            nullable: true
        - name: Limit
          in: query
          schema:
            type: integer
            format: int32
            nullable: true
        - name: Path
          in: query
          schema:
            type: string
            nullable: true
        - name: SortBy
          in: query
          schema:
            type: string
            nullable: true
        - name: Dates
          in: query
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: Success
  /api/dailyschedules/dates:
    get:
      tags:
        - DailySchedules
      parameters:
        - name: SortBy
          in: query
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: Success
  /api/dailyschedules:
    get:
      tags:
        - DailySchedules
      parameters:
        - name: uids
          in: query
          schema:
            type: string
            nullable: true
        - name: SortOrders
          in: query
          schema:
            type: array
            items:
              type: string
            nullable: true
        - name: ScheduleDates
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
            nullable: true
        - name: ScheduleCategories
          in: query
          schema:
            type: array
            items:
              type: string
            nullable: true
        - name: Ids
          in: query
          schema:
            type: string
            nullable: true
        - name: Name
          in: query
          schema:
            type: string
            nullable: true
        - name: Status
          in: query
          schema:
            type: string
            nullable: true
        - name: Categories
          in: query
          schema:
            type: string
            nullable: true
        - name: FailedJobs
          in: query
          schema:
            type: boolean
            nullable: true
        - name: Offset
          in: query
          schema:
            type: integer
            format: int32
            nullable: true
        - name: Limit
          in: query
          schema:
            type: integer
            format: int32
            nullable: true
        - name: Path
          in: query
          schema:
            type: string
            nullable: true
        - name: SortBy
          in: query
          schema:
            type: string
            nullable: true
        - name: Dates
          in: query
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: Success
    options:
      tags:
        - DailySchedules
      responses:
        '200':
          description: Success
  '/api/dailyschedules/{id}/properties':
    get:
      tags:
        - DailySchedules
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: Success
    post:
      tags:
        - DailySchedules
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            nullable: true
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/InstanceProperty'
          application/json:
            schema:
              $ref: '#/components/schemas/InstanceProperty'
          application/*+json:
            schema:
              $ref: '#/components/schemas/InstanceProperty'
      responses:
        '200':
          description: Success
  '/api/dailyschedules/{id}/properties/{name}':
    put:
      tags:
        - DailySchedules
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            nullable: true
        - name: name
          in: path
          required: true
          schema:
            type: string
            nullable: true
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/InstanceProperty'
          application/json:
            schema:
              $ref: '#/components/schemas/InstanceProperty'
          application/*+json:
            schema:
              $ref: '#/components/schemas/InstanceProperty'
      responses:
        '200':
          description: Success
    delete:
      tags:
        - DailySchedules
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            nullable: true
        - name: name
          in: path
          required: true
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: Success
  /api/dailyvisionworkspaces:
    get:
      tags:
        - DailyVisionWorkspaces
      parameters:
        - name: DayOffset
          in: query
          schema:
            type: integer
            format: int32
            nullable: true
        - name: IncludeCardsWithoutStatus
          in: query
          schema:
            type: boolean
            nullable: true
      responses:
        '200':
          description: Success
    options:
      tags:
        - DailyVisionWorkspaces
      responses:
        '200':
          description: Success
  '/api/dailyvisionworkspaces/{id}':
    get:
      tags:
        - DailyVisionWorkspaces
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: DayOffset
          in: query
          schema:
            type: integer
            format: int32
            nullable: true
        - name: IncludeCardsWithoutStatus
          in: query
          schema:
            type: boolean
            nullable: true
      responses:
        '200':
          description: Success
  '/api/departments/{id}':
    get:
      tags:
        - Departments
      summary: Get a department for the id specified
      description: "Sample request (this returns the **department** with **id = 1**):  \r\n        GET /api/departments/1"
      parameters:
        - name: id
          in: path
          description: The id of the department you want to get
          required: true
          schema:
            type: integer
            description: The id of the department you want to get
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Department'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /api/departments:
    get:
      tags:
        - Departments
      summary: Get a list of departments based on optional criteria specified
      description: "Sample request (this returns a list of **departments** by **name** in **descending** order):  \r\n        GET /api/departments?sortby=name:desc"
      parameters:
        - name: Name
          in: query
          schema:
            type: string
            nullable: true
        - name: Limit
          in: query
          schema:
            type: integer
            format: int32
            nullable: true
        - name: Offset
          in: query
          schema:
            type: integer
            format: int32
            nullable: true
        - name: Ids
          in: query
          schema:
            type: string
            nullable: true
        - name: SortOrders
          in: query
          schema:
            type: array
            items:
              type: string
            nullable: true
        - name: HasAccess
          in: query
          schema:
            type: boolean
        - name: AccessibleDepartments
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
            nullable: true
        - name: SortBy
          in: query
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Department'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    options:
      tags:
        - Departments
      responses:
        '200':
          description: Success
  '/api/users/{userId}/escalations':
    get:
      tags:
        - Escalation
      summary: Get a list of escalations tied to a user.
      description: "Sample request (this returns a list of **escalations** tied to a **user** in **descending** order):  \r\n        GET /api/escalations"
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Escalation'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    put:
      tags:
        - Escalation
      summary: Acknowledge escalations by bulk
      description: "Sample request (this updates the **escalation**):  \r\n    PUT /api/users/0/escalations/  \r\n    [\r\n        {  \r\n            \"escalationId\": 1,  \r\n            \"acknowledged\": true\r\n        },\r\n        {  \r\n            \"escalationId\": 2,  \r\n            \"acknowledged\": true\r\n        }\r\n    ]"
      parameters:
        - name: userId
          in: path
          description: The user unique identifier
          required: true
          schema:
            type: integer
            description: The user unique identifier
            format: int32
      requestBody:
        description: Collection of escalations
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Escalation'
              description: Collection of escalations
              nullable: true
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Escalation'
              description: Collection of escalations
              nullable: true
          application/*+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Escalation'
              description: Collection of escalations
              nullable: true
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Escalation'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    options:
      tags:
        - Escalation
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
  '/api/users/{userId}/escalations/{escalationId}':
    get:
      tags:
        - Escalation
      summary: Get an escalation for the unique identifier specified tied to the user
      description: "Sample request (this returns the **escalation** with **id = 1** for user **id = 0**):  \r\n        GET /api/users/0/escalation/1"
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: escalationId
          in: path
          description: The unique identifier of escalation to retrieve
          required: true
          schema:
            type: integer
            description: The unique identifier of escalation to retrieve
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Escalation'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    put:
      tags:
        - Escalation
      summary: Acknowledge escalation specified by the id
      description: "Sample request (this updates the **escalation**):  \r\n    PUT /api/users/0/escalations/1  \r\n    {  \r\n        \"escalationId\": 1,  \r\n        \"acknowledged\": true\r\n    }"
      parameters:
        - name: userId
          in: path
          description: The user unique identifier
          required: true
          schema:
            type: integer
            description: The user unique identifier
            format: int32
        - name: escalationId
          in: path
          description: The escalation unique identifier
          required: true
          schema:
            type: integer
            description: The escalation unique identifier
            format: int32
      requestBody:
        description: The escalation
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Escalation'
          application/json:
            schema:
              $ref: '#/components/schemas/Escalation'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Escalation'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Escalation'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /api/events:
    get:
      tags:
        - Events
      responses:
        '200':
          description: Success
    options:
      tags:
        - Events
      responses:
        '200':
          description: Success
  /api/externaltoken:
    post:
      tags:
        - ExternalToken
      summary: "Create a token for use by the user submitting the request. The token is stored encrypted in the database and must be copied for use by the user.\r\nWhen length is provided, the generated token can only be used for external events. \r\nWhen length is not provided, the generated token can be used to interact with the API and for external events. \r\nTo receive the token in the response, the user's isExternalTokenDisabled property must be False."
      description: "Sample request (this creates a new **external token** having 20 characters):  \r\n    POST /api/externaltoken  \r\n    {  \r\n        \"length\": 20  \r\n    }"
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ExternalToken'
          application/json:
            schema:
              $ref: '#/components/schemas/ExternalToken'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ExternalToken'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalToken'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    options:
      tags:
        - ExternalToken
      responses:
        '200':
          description: Success
  /api/features:
    get:
      tags:
        - Features
      parameters:
        - name: criteria
          in: query
          schema:
            $ref: '#/components/schemas/FeatureCriteria'
      responses:
        '200':
          description: Success
    options:
      tags:
        - Features
      responses:
        '200':
          description: Success
  /api/feedback:
    get:
      tags:
        - Feedback
      summary: Get a list of feeback values based on optional criteria specified
      description: "Sample request (this returns a list of **feedback values** by jobType):  \r\n        GET /api/feedback?jobType=6"
      parameters:
        - name: JobTypeId
          in: query
          schema:
            type: integer
            format: int32
        - name: Name
          in: query
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LsamFeedbackMetaData'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    options:
      tags:
        - Feedback
      responses:
        '200':
          description: Success
  /api/globalproperties:
    get:
      tags:
        - GlobalProperties
      summary: Get a list of global properties based on optional criteria specified
      description: "Sample request (this returns a list of **global properties** by **name** in **descending** order):  \r\n        GET /api/globalproperties?sortby=name:desc"
      parameters:
        - name: Limit
          in: query
          schema:
            type: integer
            format: int32
            nullable: true
        - name: Offset
          in: query
          schema:
            type: integer
            format: int32
            nullable: true
        - name: Name
          in: query
          schema:
            type: string
            nullable: true
        - name: Encrypted
          in: query
          schema:
            type: boolean
            nullable: true
        - name: Ids
          in: query
          schema:
            type: string
            nullable: true
        - name: Value
          in: query
          schema:
            type: string
            nullable: true
        - name: NameOrValue
          in: query
          schema:
            type: string
            nullable: true
        - name: NoPatternValue
          in: query
          schema:
            type: boolean
            nullable: true
        - name: SortOrder.SortBy
          in: query
          schema:
            type: string
            nullable: true
        - name: SortOrder.IdColumns
          in: query
          schema:
            type: array
            items:
              type: string
            nullable: true
        - name: SortOrder.ValidSortOrders
          in: query
          schema:
            type: array
            items:
              type: string
            nullable: true
        - name: SortOrder.ColumnList
          in: query
          schema:
            type: array
            items:
              type: string
            nullable: true
        - name: SortOrder.SortTypeList
          in: query
          schema:
            type: array
            items:
              type: string
            nullable: true
        - name: SortBy
          in: query
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: Success
    post:
      tags:
        - GlobalProperties
      summary: 'Create a new global property and return it with its id, if successful'
      description: "Sample request (This creates a new **global property**):  \r\n    POST /api/globalproperties  \r\n    {  \r\n        \"name\": \"GP1\",\r\n\t\t\"value\": \"GP Value\"\t\t\r\n    }"
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/GlobalProperty'
          application/json:
            schema:
              $ref: '#/components/schemas/GlobalProperty'
          application/*+json:
            schema:
              $ref: '#/components/schemas/GlobalProperty'
      responses:
        '200':
          description: Success
    options:
      tags:
        - GlobalProperties
      responses:
        '200':
          description: Success
  '/api/globalproperties/{id}':
    get:
      tags:
        - GlobalProperties
      summary: Get a global property with the id specified
      description: "Sample request (this returns a **global property** with **id = 1**):  \r\n        GET /api/globalproperties/1"
      parameters:
        - name: id
          in: path
          description: The id of the global property you want to get
          required: true
          schema:
            type: integer
            description: The id of the global property you want to get
            format: int32
      responses:
        '200':
          description: Success
    put:
      tags:
        - GlobalProperties
      summary: Update all properties of the global property specified by the id
      description: "Sample request (this updates the **global property**):  \r\n    POST /api/globalproperties/1  \r\n    {  \r\n        \"id\": 1,  \r\n        \"name\": \"GP1\",\r\n\t\t\"value\": \"GP Value\"\t\t\r\n    }"
      parameters:
        - name: id
          in: path
          description: The global property id
          required: true
          schema:
            type: integer
            description: The global property id
            format: int32
      requestBody:
        description: The global property
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/GlobalProperty'
          application/json:
            schema:
              $ref: '#/components/schemas/GlobalProperty'
          application/*+json:
            schema:
              $ref: '#/components/schemas/GlobalProperty'
      responses:
        '200':
          description: Success
  /api/jobHistories:
    get:
      tags:
        - HistoryJob
      parameters:
        - name: From
          in: query
          schema:
            type: string
            nullable: true
        - name: To
          in: query
          schema:
            type: string
            nullable: true
        - name: ScheduleName
          in: query
          schema:
            type: string
            nullable: true
        - name: JobName
          in: query
          schema:
            type: string
            nullable: true
        - name: Duration
          in: query
          schema:
            type: integer
            format: int32
            nullable: true
        - name: JobStatusIds
          in: query
          schema:
            type: string
            nullable: true
        - name: RunDate
          in: query
          schema:
            type: string
            nullable: true
        - name: SchedulePath
          in: query
          schema:
            type: string
            nullable: true
        - name: MachineName
          in: query
          schema:
            type: string
            nullable: true
        - name: Offset
          in: query
          schema:
            type: integer
            format: int32
            nullable: true
        - name: Limit
          in: query
          schema:
            type: integer
            format: int32
            nullable: true
        - name: IncludeSummary
          in: query
          schema:
            type: boolean
        - name: PermissionIds
          in: query
          schema:
            type: string
            nullable: true
        - name: UniqueId
          in: query
          schema:
            type: string
            nullable: true
        - name: UniqueJobIds
          in: query
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: Success
    options:
      tags:
        - HistoryJob
      responses:
        '200':
          description: Success
  '/api/jobactions/{id}':
    get:
      tags:
        - JobActions
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
  /api/jobactions:
    post:
      tags:
        - JobActions
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/JobAction'
          application/json:
            schema:
              $ref: '#/components/schemas/JobAction'
          application/*+json:
            schema:
              $ref: '#/components/schemas/JobAction'
      responses:
        '200':
          description: Success
    options:
      tags:
        - JobActions
      responses:
        '200':
          description: Success
  '/api/jobinstanceactions/{id}':
    get:
      tags:
        - JobInstanceActions
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
  /api/jobinstanceactions:
    post:
      tags:
        - JobInstanceActions
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/JobInstanceAction'
          application/json:
            schema:
              $ref: '#/components/schemas/JobInstanceAction'
          application/*+json:
            schema:
              $ref: '#/components/schemas/JobInstanceAction'
      responses:
        '200':
          description: Success
    put:
      tags:
        - JobInstanceActions
      parameters:
        - name: id
          in: query
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/JobInstanceAction'
          application/json:
            schema:
              $ref: '#/components/schemas/JobInstanceAction'
          application/*+json:
            schema:
              $ref: '#/components/schemas/JobInstanceAction'
      responses:
        '200':
          description: Success
    delete:
      tags:
        - JobInstanceActions
      parameters:
        - name: id
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
    options:
      tags:
        - JobInstanceActions
      responses:
        '200':
          description: Success
  /api/jobtags:
    get:
      tags:
        - JobTags
      parameters:
        - name: RemoteInstance
          in: query
          schema:
            type: string
            nullable: true
        - name: Name
          in: query
          schema:
            type: string
            nullable: true
        - name: Limit
          in: query
          schema:
            type: integer
            format: int32
            nullable: true
        - name: Offset
          in: query
          schema:
            type: integer
            format: int32
            nullable: true
        - name: SortOrders
          in: query
          schema:
            type: array
            items:
              type: string
            nullable: true
        - name: SortBy
          in: query
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: Success
    options:
      tags:
        - JobTags
      responses:
        '200':
          description: Success
  /api/licenseTaskCount:
    get:
      tags:
        - LicenseTaskCount
      parameters:
        - name: From
          in: query
          schema:
            type: string
            nullable: true
        - name: To
          in: query
          schema:
            type: string
            nullable: true
        - name: JobTypeIds
          in: query
          schema:
            type: string
            nullable: true
        - name: DepartmentIds
          in: query
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: Success
    options:
      tags:
        - LicenseTaskCount
      responses:
        '200':
          description: Success
  /api/logs:
    post:
      tags:
        - Logs
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/SessionLog'
          application/json:
            schema:
              $ref: '#/components/schemas/SessionLog'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SessionLog'
      responses:
        '200':
          description: Success
    get:
      tags:
        - Logs
      parameters:
        - name: FileName
          in: query
          schema:
            type: string
            nullable: true
        - name: Application
          in: query
          schema:
            type: string
            nullable: true
        - name: UserId
          in: query
          schema:
            type: integer
            format: int32
            nullable: true
        - name: SessionId
          in: query
          schema:
            type: integer
            format: int64
            nullable: true
      responses:
        '200':
          description: Success
    options:
      tags:
        - Logs
      responses:
        '200':
          description: Success
  '/api/logs/{filePath}':
    get:
      tags:
        - Logs
      parameters:
        - name: From
          in: query
          schema:
            type: integer
            format: int32
            nullable: true
        - name: To
          in: query
          schema:
            type: integer
            format: int32
            nullable: true
        - name: Tail
          in: query
          schema:
            type: integer
            format: int32
            nullable: true
        - name: filePath
          in: path
          required: true
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: Success
  '/api/MachineActions/{id}':
    get:
      tags:
        - MachineActions
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
  /api/MachineActions:
    post:
      tags:
        - MachineActions
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/MachineAction'
          application/json:
            schema:
              $ref: '#/components/schemas/MachineAction'
          application/*+json:
            schema:
              $ref: '#/components/schemas/MachineAction'
      responses:
        '200':
          description: Success
    options:
      tags:
        - MachineActions
      responses:
        '200':
          description: Success
  /api/machinegroups:
    get:
      tags:
        - MachineGroups
      parameters:
        - name: Offset
          in: query
          schema:
            type: integer
            format: int32
            nullable: true
        - name: Limit
          in: query
          schema:
            type: integer
            format: int32
            nullable: true
        - name: Name
          in: query
          schema:
            type: string
            nullable: true
        - name: Type
          in: query
          schema:
            type: string
            nullable: true
        - name: Ids
          in: query
          schema:
            type: string
            nullable: true
        - name: TypeIds
          in: query
          schema:
            type: string
            nullable: true
        - name: IncludeMachines
          in: query
          schema:
            type: boolean
        - name: HasAdminAccess
          in: query
          schema:
            type: boolean
        - name: AccessibleMachineGroups
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
            nullable: true
        - name: SortBy
          in: query
          schema:
            type: string
            nullable: true
        - name: SortOrders
          in: query
          schema:
            type: array
            items:
              type: string
            nullable: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MachineGroup'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    post:
      tags:
        - MachineGroups
      summary: 'Create a new access code and return it with its id, if successful'
      description: "Sample request (this creates a new **access code**):  \r\n    POST /api/accesscodes  \r\n    {  \r\n        \"name\": \"Operator\"\"  \r\n    }"
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/MachineGroup'
          application/json:
            schema:
              $ref: '#/components/schemas/MachineGroup'
          application/*+json:
            schema:
              $ref: '#/components/schemas/MachineGroup'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MachineGroup'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    options:
      tags:
        - MachineGroups
      responses:
        '200':
          description: Success
  '/api/machinegroups/{id}':
    get:
      tags:
        - MachineGroups
      summary: Get an machine group for the id specified
      description: "Sample request (this returns the **machine group** with **id = 1**):  \r\n        GET /api/machinegroups/1"
      parameters:
        - name: id
          in: path
          description: The id of the machine group you want to get
          required: true
          schema:
            type: integer
            description: The id of the machine group you want to get
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MachineGroup'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    put:
      tags:
        - MachineGroups
      summary: Update all properties of the machine group specified by the id
      description: "Sample request (this updates the **machine group**):  \r\n    PUT /api/machinegroups/1  \r\n    {  \r\n        \"id\": 1,  \r\n        \"name\": \"MachineGroupName\"\r\n        \"type: {\r\n                \"id\": 6,  \r\n    }"
      parameters:
        - name: id
          in: path
          description: The machine group id
          required: true
          schema:
            type: integer
            description: The machine group id
            format: int32
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/MachineGroup'
          application/json:
            schema:
              $ref: '#/components/schemas/MachineGroup'
          application/*+json:
            schema:
              $ref: '#/components/schemas/MachineGroup'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MachineGroup'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /api/machines:
    get:
      tags:
        - Machines
      parameters:
        - name: Offset
          in: query
          schema:
            type: integer
            format: int32
            nullable: true
        - name: Limit
          in: query
          schema:
            type: integer
            format: int32
            nullable: true
        - name: includeDocumentation
          in: query
          schema:
            type: boolean
        - name: Ids
          in: query
          schema:
            type: string
            nullable: true
        - name: Name
          in: query
          schema:
            type: string
            nullable: true
        - name: Type
          in: query
          schema:
            type: string
            nullable: true
        - name: Typeids
          in: query
          schema:
            type: string
            nullable: true
        - name: GroupName
          in: query
          schema:
            type: string
            nullable: true
        - name: GroupIds
          in: query
          schema:
            type: string
            nullable: true
        - name: States
          in: query
          schema:
            type: string
            nullable: true
        - name: Version
          in: query
          schema:
            type: string
            nullable: true
        - name: FileTransferRole
          in: query
          schema:
            type: string
            nullable: true
        - name: Sockets
          in: query
          schema:
            type: string
            nullable: true
        - name: Tls
          in: query
          schema:
            type: boolean
            nullable: true
        - name: SortBy
          in: query
          schema:
            type: string
            nullable: true
        - name: IncludeDetails
          in: query
          schema:
            type: boolean
        - name: ExcludeNullMachine
          in: query
          schema:
            type: boolean
        - name: SortOrders
          in: query
          schema:
            type: array
            items:
              type: string
            nullable: true
        - name: ExtendedProperties
          in: query
          schema:
            type: boolean
        - name: ResourceName
          in: query
          schema:
            type: string
            nullable: true
        - name: Errors
          in: query
          schema:
            type: array
            items:
              $ref: '#/components/schemas/ApiError'
            nullable: true
        - name: Properties
          in: query
          schema:
            type: array
            items:
              $ref: '#/components/schemas/AuxillaryProperty'
            nullable: true
      responses:
        '200':
          description: Success
    post:
      tags:
        - Machines
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Machine'
          application/json:
            schema:
              $ref: '#/components/schemas/Machine'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Machine'
      responses:
        '200':
          description: Success
    options:
      tags:
        - Machines
      responses:
        '200':
          description: Success
  /api/machines/count_by_status:
    get:
      tags:
        - Machines
      parameters:
        - name: Offset
          in: query
          schema:
            type: integer
            format: int32
            nullable: true
        - name: Limit
          in: query
          schema:
            type: integer
            format: int32
            nullable: true
        - name: includeDocumentation
          in: query
          schema:
            type: boolean
        - name: Ids
          in: query
          schema:
            type: string
            nullable: true
        - name: Name
          in: query
          schema:
            type: string
            nullable: true
        - name: Type
          in: query
          schema:
            type: string
            nullable: true
        - name: Typeids
          in: query
          schema:
            type: string
            nullable: true
        - name: GroupName
          in: query
          schema:
            type: string
            nullable: true
        - name: GroupIds
          in: query
          schema:
            type: string
            nullable: true
        - name: States
          in: query
          schema:
            type: string
            nullable: true
        - name: Version
          in: query
          schema:
            type: string
            nullable: true
        - name: FileTransferRole
          in: query
          schema:
            type: string
            nullable: true
        - name: Sockets
          in: query
          schema:
            type: string
            nullable: true
        - name: Tls
          in: query
          schema:
            type: boolean
            nullable: true
        - name: SortBy
          in: query
          schema:
            type: string
            nullable: true
        - name: IncludeDetails
          in: query
          schema:
            type: boolean
        - name: ExcludeNullMachine
          in: query
          schema:
            type: boolean
        - name: SortOrders
          in: query
          schema:
            type: array
            items:
              type: string
            nullable: true
        - name: ExtendedProperties
          in: query
          schema:
            type: boolean
        - name: ResourceName
          in: query
          schema:
            type: string
            nullable: true
        - name: Errors
          in: query
          schema:
            type: array
            items:
              $ref: '#/components/schemas/ApiError'
            nullable: true
        - name: Properties
          in: query
          schema:
            type: array
            items:
              $ref: '#/components/schemas/AuxillaryProperty'
            nullable: true
      responses:
        '200':
          description: Success
  '/api/machines/{id}/properties':
    get:
      tags:
        - Machines
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
    post:
      tags:
        - Machines
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/InstanceProperty'
          application/json:
            schema:
              $ref: '#/components/schemas/InstanceProperty'
          application/*+json:
            schema:
              $ref: '#/components/schemas/InstanceProperty'
      responses:
        '200':
          description: Success
  '/api/machines/{id}/properties/{name}':
    get:
      tags:
        - Machines
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: name
          in: path
          required: true
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: Success
    delete:
      tags:
        - Machines
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: name
          in: path
          required: true
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: Success
    put:
      tags:
        - Machines
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: name
          in: path
          required: true
          schema:
            type: string
            nullable: true
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/InstanceProperty'
          application/json:
            schema:
              $ref: '#/components/schemas/InstanceProperty'
          application/*+json:
            schema:
              $ref: '#/components/schemas/InstanceProperty'
      responses:
        '200':
          description: Success
  '/api/machines/{id}':
    get:
      tags:
        - Machines
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
    put:
      tags:
        - Machines
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Machine'
          application/json:
            schema:
              $ref: '#/components/schemas/Machine'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Machine'
      responses:
        '200':
          description: Success
  /api/servicestatus:
    get:
      tags:
        - Maintenance
      responses:
        '200':
          description: Success
  /api:
    options:
      tags:
        - Maintenance
      responses:
        '200':
          description: Success
  /api/masterinstances:
    get:
      tags:
        - MasterInstances
      parameters:
        - name: Ids
          in: query
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: Success
    post:
      tags:
        - MasterInstances
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/MasterInstance'
          application/json:
            schema:
              $ref: '#/components/schemas/MasterInstance'
          application/*+json:
            schema:
              $ref: '#/components/schemas/MasterInstance'
      responses:
        '200':
          description: Success
    options:
      tags:
        - MasterInstances
      responses:
        '200':
          description: Success
  '/api/masterinstances/{id}':
    get:
      tags:
        - MasterInstances
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
    put:
      tags:
        - MasterInstances
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/MasterInstance'
          application/json:
            schema:
              $ref: '#/components/schemas/MasterInstance'
          application/*+json:
            schema:
              $ref: '#/components/schemas/MasterInstance'
      responses:
        '200':
          description: Success
  '/api/masterjobs/{rawId}':
    get:
      tags:
        - MasterJobs
      parameters:
        - name: rawId
          in: path
          required: true
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: Success
  /api/masterjobs:
    get:
      tags:
        - MasterJobs
      parameters:
        - name: Ids
          in: query
          schema:
            type: string
            nullable: true
        - name: TagList
          in: query
          schema:
            type: array
            items:
              type: string
            nullable: true
        - name: LimitValue
          in: query
          schema:
            type: integer
            format: int32
            nullable: true
        - name: OffsetValue
          in: query
          schema:
            type: integer
            format: int32
            nullable: true
        - name: ScheduleName
          in: query
          schema:
            type: string
            nullable: true
        - name: JobName
          in: query
          schema:
            type: string
            nullable: true
        - name: SortOrders
          in: query
          schema:
            type: array
            items:
              type: string
            nullable: true
        - name: JobType
          in: query
          schema:
            type: string
            nullable: true
        - name: DepartmentList
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
            nullable: true
        - name: AccessCodeList
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
            nullable: true
        - name: Name
          in: query
          schema:
            type: string
            nullable: true
        - name: SortBy
          in: query
          schema:
            type: string
            nullable: true
        - name: AccessCodes
          in: query
          schema:
            type: string
            nullable: true
        - name: Limit
          in: query
          schema:
            type: string
            nullable: true
        - name: Offset
          in: query
          schema:
            type: string
            nullable: true
        - name: Tags
          in: query
          schema:
            type: string
            nullable: true
        - name: Departments
          in: query
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: Success
    options:
      tags:
        - MasterJobs
      responses:
        '200':
          description: Success
  /api/masterjobs/count:
    get:
      tags:
        - MasterJobs
      parameters:
        - name: Ids
          in: query
          schema:
            type: string
            nullable: true
        - name: TagList
          in: query
          schema:
            type: array
            items:
              type: string
            nullable: true
        - name: LimitValue
          in: query
          schema:
            type: integer
            format: int32
            nullable: true
        - name: OffsetValue
          in: query
          schema:
            type: integer
            format: int32
            nullable: true
        - name: ScheduleName
          in: query
          schema:
            type: string
            nullable: true
        - name: JobName
          in: query
          schema:
            type: string
            nullable: true
        - name: SortOrders
          in: query
          schema:
            type: array
            items:
              type: string
            nullable: true
        - name: JobType
          in: query
          schema:
            type: string
            nullable: true
        - name: DepartmentList
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
            nullable: true
        - name: AccessCodeList
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
            nullable: true
        - name: Name
          in: query
          schema:
            type: string
            nullable: true
        - name: SortBy
          in: query
          schema:
            type: string
            nullable: true
        - name: AccessCodes
          in: query
          schema:
            type: string
            nullable: true
        - name: Limit
          in: query
          schema:
            type: string
            nullable: true
        - name: Offset
          in: query
          schema:
            type: string
            nullable: true
        - name: Tags
          in: query
          schema:
            type: string
            nullable: true
        - name: Departments
          in: query
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: Success
  /api/MasterSchedules:
    get:
      tags:
        - MasterSchedules
      parameters:
        - name: Name
          in: query
          schema:
            type: string
            nullable: true
        - name: Ids
          in: query
          schema:
            type: string
            nullable: true
        - name: Sortby
          in: query
          schema:
            type: string
            nullable: true
        - name: Limit
          in: query
          schema:
            type: integer
            format: int32
            nullable: true
        - name: Offset
          in: query
          schema:
            type: integer
            format: int32
            nullable: true
        - name: SortOrders
          in: query
          schema:
            type: array
            items:
              type: string
            nullable: true
        - name: SubSchedule
          in: query
          schema:
            type: boolean
            nullable: true
        - name: MultiInstance
          in: query
          schema:
            type: boolean
            nullable: true
        - name: AutoBuild
          in: query
          schema:
            type: boolean
            nullable: true
      responses:
        '200':
          description: Success
    options:
      tags:
        - MasterSchedules
      responses:
        '200':
          description: Success
  '/api/MasterSchedules/{id}':
    get:
      tags:
        - MasterSchedules
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
  /api/MasterSchedules/count:
    get:
      tags:
        - MasterSchedules
      parameters:
        - name: Name
          in: query
          schema:
            type: string
            nullable: true
        - name: Ids
          in: query
          schema:
            type: string
            nullable: true
        - name: Sortby
          in: query
          schema:
            type: string
            nullable: true
        - name: Limit
          in: query
          schema:
            type: integer
            format: int32
            nullable: true
        - name: Offset
          in: query
          schema:
            type: integer
            format: int32
            nullable: true
        - name: SortOrders
          in: query
          schema:
            type: array
            items:
              type: string
            nullable: true
        - name: SubSchedule
          in: query
          schema:
            type: boolean
            nullable: true
        - name: MultiInstance
          in: query
          schema:
            type: boolean
            nullable: true
        - name: AutoBuild
          in: query
          schema:
            type: boolean
            nullable: true
      responses:
        '200':
          description: Success
  /api/mastervisionworkspaces:
    get:
      tags:
        - MasterVisionWorkspaces
      parameters:
        - name: Ids
          in: query
          schema:
            type: string
            nullable: true
        - name: Name
          in: query
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: Success
    post:
      tags:
        - MasterVisionWorkspaces
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/MasterVisionWorkspace'
          application/json:
            schema:
              $ref: '#/components/schemas/MasterVisionWorkspace'
          application/*+json:
            schema:
              $ref: '#/components/schemas/MasterVisionWorkspace'
      responses:
        '200':
          description: Success
    options:
      tags:
        - MasterVisionWorkspaces
      responses:
        '200':
          description: Success
  '/api/mastervisionworkspaces/{id}':
    get:
      tags:
        - MasterVisionWorkspaces
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
    put:
      tags:
        - MasterVisionWorkspaces
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/MasterVisionWorkspace'
          application/json:
            schema:
              $ref: '#/components/schemas/MasterVisionWorkspace'
          application/*+json:
            schema:
              $ref: '#/components/schemas/MasterVisionWorkspace'
      responses:
        '200':
          description: Success
    options:
      tags:
        - VisionCards
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
  /api/namedInstances:
    get:
      tags:
        - NamedInstances
      parameters:
        - name: Id
          in: query
          schema:
            type: integer
            format: int32
            nullable: true
        - name: Name
          in: query
          schema:
            type: string
            nullable: true
        - name: ScheduleId
          in: query
          schema:
            type: integer
            format: int32
            nullable: true
        - name: Limit
          in: query
          schema:
            type: integer
            format: int32
            nullable: true
        - name: Offset
          in: query
          schema:
            type: integer
            format: int32
            nullable: true
        - name: SortOrders
          in: query
          schema:
            type: array
            items:
              type: string
            nullable: true
        - name: SortBy
          in: query
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: Success
    options:
      tags:
        - NamedInstances
      responses:
        '200':
          description: Success
  '/api/namedInstances/{instanceId}':
    get:
      tags:
        - NamedInstances
      parameters:
        - name: instanceId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
  /api/opconEventsCollection:
    post:
      tags:
        - OpConEvents
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/OpConEventCollection'
          application/json:
            schema:
              $ref: '#/components/schemas/OpConEventCollection'
          application/*+json:
            schema:
              $ref: '#/components/schemas/OpConEventCollection'
      responses:
        '200':
          description: Success
    options:
      tags:
        - OpConEvents
      responses:
        '200':
          description: Success
  /api/propertyexpression:
    post:
      tags:
        - PropertyExpression
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/PropertyExpression'
          application/json:
            schema:
              $ref: '#/components/schemas/PropertyExpression'
          application/*+json:
            schema:
              $ref: '#/components/schemas/PropertyExpression'
      responses:
        '200':
          description: Success
    options:
      tags:
        - PropertyExpression
      responses:
        '200':
          description: Success
  /api/refreshScheduleBuildResultCache:
    get:
      tags:
        - RefreshScheduleBuildResultsCache
      responses:
        '200':
          description: Success
    options:
      tags:
        - RefreshScheduleBuildResultsCache
      responses:
        '200':
          description: Success
  /api/refreshVisionCache:
    get:
      tags:
        - RefreshVisionCache
      parameters:
        - name: RefreshStatistics
          in: query
          schema:
            type: boolean
      responses:
        '200':
          description: Success
    options:
      tags:
        - RefreshVisionCache
      responses:
        '200':
          description: Success
  /api/remoteinstances:
    get:
      tags:
        - RemoteInstances
      parameters:
        - name: Ids
          in: query
          schema:
            type: string
            nullable: true
        - name: Name
          in: query
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: Success
    post:
      tags:
        - RemoteInstances
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/RemoteInstance'
          application/json:
            schema:
              $ref: '#/components/schemas/RemoteInstance'
          application/*+json:
            schema:
              $ref: '#/components/schemas/RemoteInstance'
      responses:
        '200':
          description: Success
    options:
      tags:
        - RemoteInstances
      responses:
        '200':
          description: Success
  '/api/remoteinstances/{id}':
    get:
      tags:
        - RemoteInstances
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
    put:
      tags:
        - RemoteInstances
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/RemoteInstance'
          application/json:
            schema:
              $ref: '#/components/schemas/RemoteInstance'
          application/*+json:
            schema:
              $ref: '#/components/schemas/RemoteInstance'
      responses:
        '200':
          description: Success
    delete:
      tags:
        - RemoteInstances
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
  '/api/resources/{id}':
    put:
      tags:
        - Resource
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Resource'
          application/json:
            schema:
              $ref: '#/components/schemas/Resource'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Resource'
      responses:
        '200':
          description: Success
    get:
      tags:
        - Resource
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
  /api/resources:
    post:
      tags:
        - Resource
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Resource'
          application/json:
            schema:
              $ref: '#/components/schemas/Resource'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Resource'
      responses:
        '200':
          description: Success
    get:
      tags:
        - Resource
      parameters:
        - name: IncludeDependentDailyJobs
          in: query
          schema:
            type: boolean
        - name: IncludeUpdatedByDailyJobs
          in: query
          schema:
            type: boolean
        - name: Offset
          in: query
          schema:
            type: integer
            format: int32
            nullable: true
        - name: Limit
          in: query
          schema:
            type: integer
            format: int32
            nullable: true
        - name: Name
          in: query
          schema:
            type: string
            nullable: true
        - name: Value
          in: query
          schema:
            type: integer
            format: int32
            nullable: true
        - name: Ids
          in: query
          schema:
            type: string
            nullable: true
        - name: Description
          in: query
          schema:
            type: string
            nullable: true
        - name: SortBy
          in: query
          schema:
            type: string
            nullable: true
        - name: SortOrders
          in: query
          schema:
            type: array
            items:
              type: string
            nullable: true
      responses:
        '200':
          description: Success
    options:
      tags:
        - Resource
      responses:
        '200':
          description: Success
  /api/roles:
    get:
      tags:
        - Roles
      parameters:
        - name: Limit
          in: query
          schema:
            type: integer
            format: int32
            nullable: true
        - name: Offset
          in: query
          schema:
            type: integer
            format: int32
            nullable: true
        - name: IncludeAccessCodes
          in: query
          schema:
            type: boolean
        - name: IncludeDepartmentFunctions
          in: query
          schema:
            type: boolean
        - name: IncludeMachines
          in: query
          schema:
            type: boolean
        - name: IncludeMachineGroups
          in: query
          schema:
            type: boolean
        - name: IncludeSchedules
          in: query
          schema:
            type: boolean
        - name: IncludeServiceRequests
          in: query
          schema:
            type: boolean
        - name: IncludeBatchUsers
          in: query
          schema:
            type: boolean
        - name: IncludeUsers
          in: query
          schema:
            type: boolean
        - name: Name
          in: query
          schema:
            type: string
            nullable: true
        - name: Ids
          in: query
          schema:
            type: string
            nullable: true
        - name: SortOrder.SortBy
          in: query
          schema:
            type: string
            nullable: true
        - name: SortOrder.IdColumns
          in: query
          schema:
            type: array
            items:
              type: string
            nullable: true
        - name: SortOrder.ValidSortOrders
          in: query
          schema:
            type: array
            items:
              type: string
            nullable: true
        - name: SortOrder.ColumnList
          in: query
          schema:
            type: array
            items:
              type: string
            nullable: true
        - name: SortOrder.SortTypeList
          in: query
          schema:
            type: array
            items:
              type: string
            nullable: true
        - name: SortBy
          in: query
          schema:
            type: string
            nullable: true
        - name: IncludeEmbeddedScripts
          in: query
          schema:
            type: boolean
      responses:
        '200':
          description: Success
    post:
      tags:
        - Roles
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Role'
          application/json:
            schema:
              $ref: '#/components/schemas/Role'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Role'
      responses:
        '200':
          description: Success
    options:
      tags:
        - Roles
      responses:
        '200':
          description: Success
  '/api/roles/{id}':
    get:
      tags:
        - Roles
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
    put:
      tags:
        - Roles
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Role'
          application/json:
            schema:
              $ref: '#/components/schemas/Role'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Role'
      responses:
        '200':
          description: Success
  '/api/scheduleactions/{id}':
    get:
      tags:
        - ScheduleActions
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
  /api/scheduleactions:
    post:
      tags:
        - ScheduleActions
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ScheduleAction'
          application/json:
            schema:
              $ref: '#/components/schemas/ScheduleAction'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ScheduleAction'
      responses:
        '200':
          description: Success
    options:
      tags:
        - ScheduleActions
      responses:
        '200':
          description: Success
  '/api/scheduleActionsByDate/{id}':
    get:
      tags:
        - ScheduleActionsByDate
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
  /api/scheduleActionsByDate:
    post:
      tags:
        - ScheduleActionsByDate
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ScheduleActionByDate'
          application/json:
            schema:
              $ref: '#/components/schemas/ScheduleActionByDate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ScheduleActionByDate'
      responses:
        '200':
          description: Success
    options:
      tags:
        - ScheduleActionsByDate
      responses:
        '200':
          description: Success
  '/api/schedulebuilds/{id}':
    get:
      tags:
        - ScheduleBuilds
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
  /api/schedulebuilds:
    post:
      tags:
        - ScheduleBuilds
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ScheduleBuildAction'
          application/json:
            schema:
              $ref: '#/components/schemas/ScheduleBuildAction'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ScheduleBuildAction'
      responses:
        '200':
          description: Success
    options:
      tags:
        - ScheduleBuilds
      responses:
        '200':
          description: Success
  /api/scriptRunners:
    get:
      tags:
        - ScriptRunners
      parameters:
        - name: ScriptTypeId
          in: query
          schema:
            type: integer
            format: int32
            nullable: true
        - name: PlatformId
          in: query
          schema:
            type: integer
            format: int32
            nullable: true
        - name: Name
          in: query
          schema:
            type: string
            nullable: true
        - name: Ids
          in: query
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: Success
    options:
      tags:
        - ScriptRunners
      responses:
        '200':
          description: Success
  '/api/scriptRunners/{id}':
    get:
      tags:
        - ScriptRunners
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
  /api/scripts:
    get:
      tags:
        - Scripts
      parameters:
        - name: ScriptName
          in: query
          schema:
            type: string
            nullable: true
        - name: ScriptTypeName
          in: query
          schema:
            type: string
            nullable: true
        - name: ScriptIds
          in: query
          schema:
            type: string
            nullable: true
        - name: RunnerOsId
          in: query
          schema:
            type: integer
            format: int32
        - name: Limit
          in: query
          schema:
            type: integer
            format: int32
            nullable: true
        - name: Offset
          in: query
          schema:
            type: integer
            format: int32
            nullable: true
        - name: IncludeVersions
          in: query
          schema:
            type: boolean
      responses:
        '200':
          description: Success
    options:
      tags:
        - Scripts
      responses:
        '200':
          description: Success
  '/api/scripts/{id}':
    get:
      tags:
        - Scripts
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
  '/api/scripts/{scriptId}/versions/{versionId}':
    get:
      tags:
        - Scripts
      parameters:
        - name: scriptId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: versionId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
  '/api/scriptVersions/{scriptVersionId}':
    get:
      tags:
        - Scripts
      parameters:
        - name: scriptVersionId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
  /api/serveroptions:
    get:
      tags:
        - ServerOptions
      responses:
        '200':
          description: Success
    put:
      tags:
        - ServerOptions
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ServerOptions'
          application/json:
            schema:
              $ref: '#/components/schemas/ServerOptions'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ServerOptions'
      responses:
        '200':
          description: Success
    options:
      tags:
        - ServerOptions
      responses:
        '200':
          description: Success
  /api/servicerequestcategories:
    get:
      tags:
        - ServiceRequestCategories
      parameters:
        - name: Limit
          in: query
          schema:
            type: integer
            format: int32
            nullable: true
        - name: Offset
          in: query
          schema:
            type: integer
            format: int32
            nullable: true
        - name: IncludeServiceRequests
          in: query
          schema:
            type: boolean
        - name: Name
          in: query
          schema:
            type: string
            nullable: true
        - name: Color
          in: query
          schema:
            type: string
            nullable: true
        - name: ServiceRequestName
          in: query
          schema:
            type: string
            nullable: true
        - name: Ids
          in: query
          schema:
            type: string
            nullable: true
        - name: SortOrder.SortBy
          in: query
          schema:
            type: string
            nullable: true
        - name: SortOrder.IdColumns
          in: query
          schema:
            type: array
            items:
              type: string
            nullable: true
        - name: SortOrder.ValidSortOrders
          in: query
          schema:
            type: array
            items:
              type: string
            nullable: true
        - name: SortOrder.ColumnList
          in: query
          schema:
            type: array
            items:
              type: string
            nullable: true
        - name: SortOrder.SortTypeList
          in: query
          schema:
            type: array
            items:
              type: string
            nullable: true
        - name: SortBy
          in: query
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: Success
    post:
      tags:
        - ServiceRequestCategories
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ServiceRequestCategory'
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceRequestCategory'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ServiceRequestCategory'
      responses:
        '200':
          description: Success
    options:
      tags:
        - ServiceRequestCategories
      responses:
        '200':
          description: Success
  '/api/servicerequestcategories/{id}':
    get:
      tags:
        - ServiceRequestCategories
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
    put:
      tags:
        - ServiceRequestCategories
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ServiceRequestCategory'
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceRequestCategory'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ServiceRequestCategory'
      responses:
        '200':
          description: Success
    delete:
      tags:
        - ServiceRequestCategories
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
  /api/servicerequestexecutions:
    get:
      tags:
        - ServiceRequestExecutions
      parameters:
        - name: Limit
          in: query
          schema:
            type: integer
            format: int32
            nullable: true
        - name: Offset
          in: query
          schema:
            type: integer
            format: int32
            nullable: true
        - name: IncludeServiceRequests
          in: query
          schema:
            type: boolean
        - name: IncludeOpconResponses
          in: query
          schema:
            type: boolean
        - name: IncludeUsers
          in: query
          schema:
            type: boolean
        - name: ServiceRequestName
          in: query
          schema:
            type: string
            nullable: true
        - name: LoginName
          in: query
          schema:
            type: string
            nullable: true
        - name: Ids
          in: query
          schema:
            type: string
            nullable: true
        - name: ServiceRequestIds
          in: query
          schema:
            type: string
            nullable: true
        - name: ExecutionStatuses
          in: query
          schema:
            type: string
            nullable: true
        - name: LastUpdateLessThan
          in: query
          schema:
            type: string
            nullable: true
        - name: SortOrder.SortBy
          in: query
          schema:
            type: string
            nullable: true
        - name: SortOrder.IdColumns
          in: query
          schema:
            type: array
            items:
              type: string
            nullable: true
        - name: SortOrder.ValidSortOrders
          in: query
          schema:
            type: array
            items:
              type: string
            nullable: true
        - name: SortOrder.ColumnList
          in: query
          schema:
            type: array
            items:
              type: string
            nullable: true
        - name: SortOrder.SortTypeList
          in: query
          schema:
            type: array
            items:
              type: string
            nullable: true
        - name: GroupBy
          in: query
          schema:
            type: string
            nullable: true
        - name: SortBy
          in: query
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: Success
    post:
      tags:
        - ServiceRequestExecutions
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ServiceRequestExecution'
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceRequestExecution'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ServiceRequestExecution'
      responses:
        '200':
          description: Success
    options:
      tags:
        - ServiceRequestExecutions
      responses:
        '200':
          description: Success
  '/api/servicerequestexecutions/{id}':
    get:
      tags:
        - ServiceRequestExecutions
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
    put:
      tags:
        - ServiceRequestExecutions
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ServiceRequestExecution'
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceRequestExecution'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ServiceRequestExecution'
      responses:
        '200':
          description: Success
    delete:
      tags:
        - ServiceRequestExecutions
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
  '/api/servicerequestexecutions/count_by_{field}':
    get:
      tags:
        - ServiceRequestExecutions
      parameters:
        - name: field
          in: path
          required: true
          schema:
            type: string
            nullable: true
        - name: Limit
          in: query
          schema:
            type: integer
            format: int32
            nullable: true
        - name: Offset
          in: query
          schema:
            type: integer
            format: int32
            nullable: true
        - name: IncludeServiceRequests
          in: query
          schema:
            type: boolean
        - name: IncludeOpconResponses
          in: query
          schema:
            type: boolean
        - name: IncludeUsers
          in: query
          schema:
            type: boolean
        - name: ServiceRequestName
          in: query
          schema:
            type: string
            nullable: true
        - name: LoginName
          in: query
          schema:
            type: string
            nullable: true
        - name: Ids
          in: query
          schema:
            type: string
            nullable: true
        - name: ServiceRequestIds
          in: query
          schema:
            type: string
            nullable: true
        - name: ExecutionStatuses
          in: query
          schema:
            type: string
            nullable: true
        - name: LastUpdateLessThan
          in: query
          schema:
            type: string
            nullable: true
        - name: SortOrder.SortBy
          in: query
          schema:
            type: string
            nullable: true
        - name: SortOrder.IdColumns
          in: query
          schema:
            type: array
            items:
              type: string
            nullable: true
        - name: SortOrder.ValidSortOrders
          in: query
          schema:
            type: array
            items:
              type: string
            nullable: true
        - name: SortOrder.ColumnList
          in: query
          schema:
            type: array
            items:
              type: string
            nullable: true
        - name: SortOrder.SortTypeList
          in: query
          schema:
            type: array
            items:
              type: string
            nullable: true
        - name: GroupBy
          in: query
          schema:
            type: string
            nullable: true
        - name: SortBy
          in: query
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: Success
  '/api/selfServiceRequestExecutions/count_by_{field}':
    get:
      tags:
        - ServiceRequestExecutions
      parameters:
        - name: field
          in: path
          required: true
          schema:
            type: string
            nullable: true
        - name: Limit
          in: query
          schema:
            type: integer
            format: int32
            nullable: true
        - name: Offset
          in: query
          schema:
            type: integer
            format: int32
            nullable: true
        - name: IncludeServiceRequests
          in: query
          schema:
            type: boolean
        - name: IncludeOpconResponses
          in: query
          schema:
            type: boolean
        - name: IncludeUsers
          in: query
          schema:
            type: boolean
        - name: ServiceRequestName
          in: query
          schema:
            type: string
            nullable: true
        - name: LoginName
          in: query
          schema:
            type: string
            nullable: true
        - name: Ids
          in: query
          schema:
            type: string
            nullable: true
        - name: ServiceRequestIds
          in: query
          schema:
            type: string
            nullable: true
        - name: ExecutionStatuses
          in: query
          schema:
            type: string
            nullable: true
        - name: LastUpdateLessThan
          in: query
          schema:
            type: string
            nullable: true
        - name: SortOrder.SortBy
          in: query
          schema:
            type: string
            nullable: true
        - name: SortOrder.IdColumns
          in: query
          schema:
            type: array
            items:
              type: string
            nullable: true
        - name: SortOrder.ValidSortOrders
          in: query
          schema:
            type: array
            items:
              type: string
            nullable: true
        - name: SortOrder.ColumnList
          in: query
          schema:
            type: array
            items:
              type: string
            nullable: true
        - name: SortOrder.SortTypeList
          in: query
          schema:
            type: array
            items:
              type: string
            nullable: true
        - name: GroupBy
          in: query
          schema:
            type: string
            nullable: true
        - name: SortBy
          in: query
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: Success
  /api/selfServiceRequestExecutions:
    get:
      tags:
        - ServiceRequestExecutions
      parameters:
        - name: Limit
          in: query
          schema:
            type: integer
            format: int32
            nullable: true
        - name: Offset
          in: query
          schema:
            type: integer
            format: int32
            nullable: true
        - name: IncludeServiceRequests
          in: query
          schema:
            type: boolean
        - name: IncludeOpconResponses
          in: query
          schema:
            type: boolean
        - name: IncludeUsers
          in: query
          schema:
            type: boolean
        - name: ServiceRequestName
          in: query
          schema:
            type: string
            nullable: true
        - name: LoginName
          in: query
          schema:
            type: string
            nullable: true
        - name: Ids
          in: query
          schema:
            type: string
            nullable: true
        - name: ServiceRequestIds
          in: query
          schema:
            type: string
            nullable: true
        - name: ExecutionStatuses
          in: query
          schema:
            type: string
            nullable: true
        - name: LastUpdateLessThan
          in: query
          schema:
            type: string
            nullable: true
        - name: SortOrder.SortBy
          in: query
          schema:
            type: string
            nullable: true
        - name: SortOrder.IdColumns
          in: query
          schema:
            type: array
            items:
              type: string
            nullable: true
        - name: SortOrder.ValidSortOrders
          in: query
          schema:
            type: array
            items:
              type: string
            nullable: true
        - name: SortOrder.ColumnList
          in: query
          schema:
            type: array
            items:
              type: string
            nullable: true
        - name: SortOrder.SortTypeList
          in: query
          schema:
            type: array
            items:
              type: string
            nullable: true
        - name: GroupBy
          in: query
          schema:
            type: string
            nullable: true
        - name: SortBy
          in: query
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: Success
    post:
      tags:
        - ServiceRequestExecutions
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ServiceRequestExecution'
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceRequestExecution'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ServiceRequestExecution'
      responses:
        '200':
          description: Success
  '/api/selfServiceRequestExecutions/{id}':
    get:
      tags:
        - ServiceRequestExecutions
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
  /api/servicerequests:
    get:
      tags:
        - ServiceRequests
      parameters:
        - name: Limit
          in: query
          schema:
            type: integer
            format: int32
            nullable: true
        - name: Offset
          in: query
          schema:
            type: integer
            format: int32
            nullable: true
        - name: IncludeRoles
          in: query
          schema:
            type: boolean
        - name: EvaluateRules
          in: query
          schema:
            type: boolean
        - name: Name
          in: query
          schema:
            type: string
            nullable: true
        - name: CategoryName
          in: query
          schema:
            type: string
            nullable: true
        - name: RoleName
          in: query
          schema:
            type: string
            nullable: true
        - name: Ids
          in: query
          schema:
            type: string
            nullable: true
        - name: SortOrder.SortBy
          in: query
          schema:
            type: string
            nullable: true
        - name: SortOrder.IdColumns
          in: query
          schema:
            type: array
            items:
              type: string
            nullable: true
        - name: SortOrder.ValidSortOrders
          in: query
          schema:
            type: array
            items:
              type: string
            nullable: true
        - name: SortOrder.ColumnList
          in: query
          schema:
            type: array
            items:
              type: string
            nullable: true
        - name: SortOrder.SortTypeList
          in: query
          schema:
            type: array
            items:
              type: string
            nullable: true
        - name: SortBy
          in: query
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: Success
    post:
      tags:
        - ServiceRequests
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ServiceRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ServiceRequest'
      responses:
        '200':
          description: Success
    options:
      tags:
        - ServiceRequests
      responses:
        '200':
          description: Success
  '/api/servicerequests/{id}':
    get:
      tags:
        - ServiceRequests
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
    put:
      tags:
        - ServiceRequests
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ServiceRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ServiceRequest'
      responses:
        '200':
          description: Success
    delete:
      tags:
        - ServiceRequests
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
  '/api/selfServiceRequests/{id}':
    delete:
      tags:
        - ServiceRequests
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
    get:
      tags:
        - ServiceRequests
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
    put:
      tags:
        - ServiceRequests
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ServiceRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ServiceRequest'
      responses:
        '200':
          description: Success
  /api/selfServiceRequests:
    get:
      tags:
        - ServiceRequests
      parameters:
        - name: Limit
          in: query
          schema:
            type: integer
            format: int32
            nullable: true
        - name: Offset
          in: query
          schema:
            type: integer
            format: int32
            nullable: true
        - name: IncludeRoles
          in: query
          schema:
            type: boolean
        - name: EvaluateRules
          in: query
          schema:
            type: boolean
        - name: Name
          in: query
          schema:
            type: string
            nullable: true
        - name: CategoryName
          in: query
          schema:
            type: string
            nullable: true
        - name: RoleName
          in: query
          schema:
            type: string
            nullable: true
        - name: Ids
          in: query
          schema:
            type: string
            nullable: true
        - name: SortOrder.SortBy
          in: query
          schema:
            type: string
            nullable: true
        - name: SortOrder.IdColumns
          in: query
          schema:
            type: array
            items:
              type: string
            nullable: true
        - name: SortOrder.ValidSortOrders
          in: query
          schema:
            type: array
            items:
              type: string
            nullable: true
        - name: SortOrder.ColumnList
          in: query
          schema:
            type: array
            items:
              type: string
            nullable: true
        - name: SortOrder.SortTypeList
          in: query
          schema:
            type: array
            items:
              type: string
            nullable: true
        - name: SortBy
          in: query
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: Success
    post:
      tags:
        - ServiceRequests
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ServiceRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ServiceRequest'
      responses:
        '200':
          description: Success
  /api/solutionManagerSettings:
    get:
      tags:
        - SolutionManagerSettings
      parameters:
        - name: Ids
          in: query
          schema:
            type: string
            nullable: true
        - name: Name
          in: query
          schema:
            type: string
            nullable: true
        - name: RoleId
          in: query
          schema:
            type: integer
            format: int32
            nullable: true
        - name: UserId
          in: query
          schema:
            type: integer
            format: int32
            nullable: true
        - name: GlobalOnly
          in: query
          schema:
            type: boolean
            nullable: true
        - name: Public
          in: query
          schema:
            type: boolean
            nullable: true
        - name: UserCanWrite
          in: query
          schema:
            type: boolean
            nullable: true
      responses:
        '200':
          description: Success
    post:
      tags:
        - SolutionManagerSettings
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/SolutionManagerSettings'
          application/json:
            schema:
              $ref: '#/components/schemas/SolutionManagerSettings'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SolutionManagerSettings'
      responses:
        '200':
          description: Success
    options:
      tags:
        - SolutionManagerSettings
      responses:
        '200':
          description: Success
  '/api/solutionManagerSettings/{id}':
    get:
      tags:
        - SolutionManagerSettings
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: Success
    put:
      tags:
        - SolutionManagerSettings
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/SolutionManagerSettings'
          application/json:
            schema:
              $ref: '#/components/schemas/SolutionManagerSettings'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SolutionManagerSettings'
      responses:
        '200':
          description: Success
    delete:
      tags:
        - SolutionManagerSettings
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
  '/api/thresholds/{id}':
    put:
      tags:
        - Thresholds
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Threshold'
          application/json:
            schema:
              $ref: '#/components/schemas/Threshold'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Threshold'
      responses:
        '200':
          description: Success
    get:
      tags:
        - Thresholds
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
  /api/thresholds:
    post:
      tags:
        - Thresholds
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Threshold'
          application/json:
            schema:
              $ref: '#/components/schemas/Threshold'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Threshold'
      responses:
        '200':
          description: Success
    get:
      tags:
        - Thresholds
      parameters:
        - name: IncludeDependentDailyJobs
          in: query
          schema:
            type: boolean
        - name: IncludeUpdatedByDailyJobs
          in: query
          schema:
            type: boolean
        - name: Offset
          in: query
          schema:
            type: integer
            format: int32
            nullable: true
        - name: Limit
          in: query
          schema:
            type: integer
            format: int32
            nullable: true
        - name: Name
          in: query
          schema:
            type: string
            nullable: true
        - name: Value
          in: query
          schema:
            type: integer
            format: int32
            nullable: true
        - name: Ids
          in: query
          schema:
            type: string
            nullable: true
        - name: Description
          in: query
          schema:
            type: string
            nullable: true
        - name: SortBy
          in: query
          schema:
            type: string
            nullable: true
        - name: SortOrders
          in: query
          schema:
            type: array
            items:
              type: string
            nullable: true
      responses:
        '200':
          description: Success
    options:
      tags:
        - Thresholds
      responses:
        '200':
          description: Success
  /api/tokens:
    get:
      tags:
        - Tokens
      responses:
        '200':
          description: Success
    post:
      tags:
        - Tokens
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Token'
          application/json:
            schema:
              $ref: '#/components/schemas/Token'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Token'
      responses:
        '200':
          description: Success
    delete:
      tags:
        - Tokens
      responses:
        '200':
          description: Success
    options:
      tags:
        - Tokens
      responses:
        '200':
          description: Success
  /api/tokens/windowsauth:
    post:
      tags:
        - Tokens
      responses:
        '200':
          description: Success
  '/api/tokens/{id}':
    put:
      tags:
        - Tokens
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            nullable: true
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Token'
          application/json:
            schema:
              $ref: '#/components/schemas/Token'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Token'
      responses:
        '200':
          description: Success
  /api/users:
    get:
      tags:
        - Users
      parameters:
        - name: Limit
          in: query
          schema:
            type: integer
            format: int32
            nullable: true
        - name: Offset
          in: query
          schema:
            type: integer
            format: int32
            nullable: true
        - name: IncludeDetails
          in: query
          schema:
            type: boolean
        - name: LoginName
          in: query
          schema:
            type: string
            nullable: true
        - name: UserName
          in: query
          schema:
            type: string
            nullable: true
        - name: RoleName
          in: query
          schema:
            type: string
            nullable: true
        - name: SelfServiceUser
          in: query
          schema:
            type: boolean
            nullable: true
        - name: Ids
          in: query
          schema:
            type: string
            nullable: true
        - name: SortOrder.SortBy
          in: query
          schema:
            type: string
            nullable: true
        - name: SortOrder.IdColumns
          in: query
          schema:
            type: array
            items:
              type: string
            nullable: true
        - name: SortOrder.ValidSortOrders
          in: query
          schema:
            type: array
            items:
              type: string
            nullable: true
        - name: SortOrder.ColumnList
          in: query
          schema:
            type: array
            items:
              type: string
            nullable: true
        - name: SortOrder.SortTypeList
          in: query
          schema:
            type: array
            items:
              type: string
            nullable: true
        - name: SortBy
          in: query
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: Success
    post:
      tags:
        - Users
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/User'
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/*+json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: Success
    options:
      tags:
        - Users
      responses:
        '200':
          description: Success
  '/api/users/{id}':
    get:
      tags:
        - Users
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
    put:
      tags:
        - Users
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/User'
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/*+json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: Success
  /api/Values:
    get:
      tags:
        - Values
      responses:
        '200':
          description: Success
    post:
      tags:
        - Values
      requestBody:
        content:
          application/json-patch+json:
            schema:
              type: string
              nullable: true
          application/json:
            schema:
              type: string
              nullable: true
          application/*+json:
            schema:
              type: string
              nullable: true
      responses:
        '200':
          description: Success
  '/api/Values/{id}':
    get:
      tags:
        - Values
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
    put:
      tags:
        - Values
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json-patch+json:
            schema:
              type: string
              nullable: true
          application/json:
            schema:
              type: string
              nullable: true
          application/*+json:
            schema:
              type: string
              nullable: true
      responses:
        '200':
          description: Success
    delete:
      tags:
        - Values
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
  /api/version:
    get:
      tags:
        - Version
      responses:
        '200':
          description: Success
  /api/visionactions:
    get:
      tags:
        - VisionActions
      parameters:
        - name: Ids
          in: query
          schema:
            type: string
            nullable: true
        - name: Name
          in: query
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: Success
    post:
      tags:
        - VisionActions
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/VisionAction'
          application/json:
            schema:
              $ref: '#/components/schemas/VisionAction'
          application/*+json:
            schema:
              $ref: '#/components/schemas/VisionAction'
      responses:
        '200':
          description: Success
    options:
      tags:
        - VisionActions
      responses:
        '200':
          description: Success
  '/api/visionactions/{id}':
    get:
      tags:
        - VisionActions
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
    put:
      tags:
        - VisionActions
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/VisionAction'
          application/json:
            schema:
              $ref: '#/components/schemas/VisionAction'
          application/*+json:
            schema:
              $ref: '#/components/schemas/VisionAction'
      responses:
        '200':
          description: Success
    delete:
      tags:
        - VisionActions
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
  /api/visioncardanomalies:
    get:
      tags:
        - VisionCardAnomalies
      parameters:
        - name: Ids
          in: query
          schema:
            type: string
            nullable: true
        - name: From
          in: query
          schema:
            type: string
            nullable: true
        - name: To
          in: query
          schema:
            type: string
            nullable: true
        - name: CardIds
          in: query
          schema:
            type: string
            nullable: true
        - name: ExcludeQos
          in: query
          schema:
            type: boolean
            nullable: true
        - name: ExcludeSla
          in: query
          schema:
            type: boolean
            nullable: true
        - name: CardTrackIds
          in: query
          schema:
            type: array
            items:
              $ref: '#/components/schemas/CardTrackId'
            nullable: true
      responses:
        '200':
          description: Success
    options:
      tags:
        - VisionCardAnomalies
      responses:
        '200':
          description: Success
  '/api/mastervisionworkspaces/{id}/visioncards/{cardId}':
    get:
      tags:
        - VisionCards
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: cardId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
    put:
      tags:
        - VisionCards
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: cardId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/MasterVisionCard'
          application/json:
            schema:
              $ref: '#/components/schemas/MasterVisionCard'
          application/*+json:
            schema:
              $ref: '#/components/schemas/MasterVisionCard'
      responses:
        '200':
          description: Success
  '/api/mastervisionworkspaces/{id}/visioncards':
    post:
      tags:
        - VisionCards
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/MasterVisionCard'
          application/json:
            schema:
              $ref: '#/components/schemas/MasterVisionCard'
          application/*+json:
            schema:
              $ref: '#/components/schemas/MasterVisionCard'
      responses:
        '200':
          description: Success
  '/api/mastervisionworkspaces/{id}/visioncards/{cardId}/{version}':
    delete:
      tags:
        - VisionCards
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: cardId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: version
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
  /api/visioncardstatistics:
    get:
      tags:
        - VisionCardStatistics
      parameters:
        - name: Ids
          in: query
          schema:
            type: string
            nullable: true
        - name: From
          in: query
          schema:
            type: string
            nullable: true
        - name: To
          in: query
          schema:
            type: string
            nullable: true
        - name: CardIds
          in: query
          schema:
            type: string
            nullable: true
        - name: ExcludeQos
          in: query
          schema:
            type: boolean
            nullable: true
        - name: ExcludeSla
          in: query
          schema:
            type: boolean
            nullable: true
        - name: CardTrackIds
          in: query
          schema:
            type: array
            items:
              $ref: '#/components/schemas/CardTrackId'
            nullable: true
      responses:
        '200':
          description: Success
    options:
      tags:
        - VisionCardStatistics
      responses:
        '200':
          description: Success
  /api/visionfrequencies:
    get:
      tags:
        - VisionFrequencies
      parameters:
        - name: Ids
          in: query
          schema:
            type: string
            nullable: true
        - name: Name
          in: query
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: Success
    post:
      tags:
        - VisionFrequencies
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/VisionFrequency'
          application/json:
            schema:
              $ref: '#/components/schemas/VisionFrequency'
          application/*+json:
            schema:
              $ref: '#/components/schemas/VisionFrequency'
      responses:
        '200':
          description: Success
    options:
      tags:
        - VisionFrequencies
      responses:
        '200':
          description: Success
  '/api/visionfrequencies/{id}':
    get:
      tags:
        - VisionFrequencies
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
    put:
      tags:
        - VisionFrequencies
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/VisionFrequency'
          application/json:
            schema:
              $ref: '#/components/schemas/VisionFrequency'
          application/*+json:
            schema:
              $ref: '#/components/schemas/VisionFrequency'
      responses:
        '200':
          description: Success
    delete:
      tags:
        - VisionFrequencies
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
  /api/visionjobanomalies:
    get:
      tags:
        - VisionJobAnomalies
      parameters:
        - name: VisionCardAnomalyId
          in: query
          schema:
            type: integer
            format: int64
        - name: VisionCardAnomalyIds
          in: query
          schema:
            type: string
            nullable: true
        - name: ScheduleDate
          in: query
          schema:
            type: string
            format: date-time
        - name: TagPattern
          in: query
          schema:
            type: string
            nullable: true
        - name: StartedLate
          in: query
          schema:
            type: boolean
            nullable: true
        - name: EndedLate
          in: query
          schema:
            type: boolean
            nullable: true
        - name: ExpectedStartTime
          in: query
          schema:
            type: string
            format: date-time
            nullable: true
        - name: ExpectedEndTime
          in: query
          schema:
            type: string
            format: date-time
            nullable: true
        - name: ActualStartTime
          in: query
          schema:
            type: string
            format: date-time
            nullable: true
        - name: ActualEndTime
          in: query
          schema:
            type: string
            format: date-time
            nullable: true
      responses:
        '200':
          description: Success
    options:
      tags:
        - VisionJobAnomalies
      responses:
        '200':
          description: Success
  /api/visionstatistic:
    get:
      tags:
        - VisionStatistic
      parameters:
        - name: Ids
          in: query
          schema:
            type: string
            nullable: true
        - name: From
          in: query
          schema:
            type: string
            nullable: true
        - name: To
          in: query
          schema:
            type: string
            nullable: true
        - name: CardIds
          in: query
          schema:
            type: string
            nullable: true
        - name: ExcludeQos
          in: query
          schema:
            type: boolean
            nullable: true
        - name: ExcludeSla
          in: query
          schema:
            type: boolean
            nullable: true
        - name: CardTrackIds
          in: query
          schema:
            type: array
            items:
              $ref: '#/components/schemas/CardTrackId'
            nullable: true
      responses:
        '200':
          description: Success
    options:
      tags:
        - VisionStatistic
      responses:
        '200':
          description: Success
  /VisionStatisticsBase:
    options:
      tags:
        - VisionStatisticsBase
      responses:
        '200':
          description: Success
  /api/visionstats:
    get:
      tags:
        - VisionStats
      parameters:
        - name: Ids
          in: query
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: Success
    options:
      tags:
        - VisionStats
      responses:
        '200':
          description: Success
  '/api/visionstats/{id}':
    get:
      tags:
        - VisionStats
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
components:
  schemas:
    ApiError:
      type: object
      properties:
        resource:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        code:
          type: integer
          format: int32
          nullable: true
        message:
          type: string
          nullable: true
        ids:
          type: array
          items:
            type: integer
            format: int64
          nullable: true
      additionalProperties: false
    AuxillaryProperty:
      type: object
      properties:
        fieldCode:
          type: integer
          format: int32
        sequenceNumber:
          type: integer
          format: int32
        value:
          type: string
          nullable: true
      additionalProperties: false
    AccessCode:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ApiError'
          nullable: true
        properties:
          type: array
          items:
            $ref: '#/components/schemas/AuxillaryProperty'
          nullable: true
        resourceName:
          type: string
          nullable: true
          readOnly: true
        id:
          type: integer
          description: The id of the **access code**
          format: int32
          nullable: true
        name:
          type: string
          description: The name of the **access code**
          nullable: true
      additionalProperties: false
      description: An access code with id and name fields
    ProblemDetails:
      type: object
      properties:
        type:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        status:
          type: integer
          format: int32
          nullable: true
        detail:
          type: string
          nullable: true
        instance:
          type: string
          nullable: true
      additionalProperties: { }
    Platform:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ApiError'
          nullable: true
        properties:
          type: array
          items:
            $ref: '#/components/schemas/AuxillaryProperty'
          nullable: true
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        resourceName:
          type: string
          nullable: true
          readOnly: true
      additionalProperties: false
    UserProperty:
      type: object
      properties:
        id:
          type: integer
          format: int32
          nullable: true
        fieldCode:
          type: integer
          format: int32
          nullable: true
        sequenceNumber:
          type: integer
          format: int32
          nullable: true
        value:
          type: string
          nullable: true
      additionalProperties: false
    User:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ApiError'
          nullable: true
        properties:
          type: array
          items:
            $ref: '#/components/schemas/UserProperty'
          nullable: true
        id:
          type: integer
          format: int32
        loginName:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        password:
          type: string
          nullable: true
        externalPassword:
          type: string
          nullable: true
        externalHashedToken:
          type: string
          nullable: true
        details:
          type: string
          nullable: true
        moreDetails:
          type: string
          nullable: true
        roles:
          type: array
          items:
            $ref: '#/components/schemas/Role'
          nullable: true
        language:
          type: string
          nullable: true
        isExternalTokenDisabled:
          type: boolean
          nullable: true
        isDisabled:
          type: boolean
          nullable: true
        forcePasswordChange:
          type: boolean
          nullable: true
        email:
          type: string
          nullable: true
        numberOfFailedPasswordAttempts:
          type: integer
          format: int32
          nullable: true
        passwordNeverExpires:
          type: boolean
          nullable: true
        lastPasswordChangeDate:
          type: string
          nullable: true
        lastLoggedIn:
          type: string
          nullable: true
          readOnly: true
        lastLoggedOut:
          type: string
          nullable: true
          readOnly: true
        isSelfServiceUser:
          type: boolean
          nullable: true
        historicalPasswords:
          type: array
          items:
            type: string
          nullable: true
        solutionManagerSettings:
          type: string
          nullable: true
        resourceName:
          type: string
          nullable: true
          readOnly: true
      additionalProperties: false
    AccessCodePrivilege:
      type: object
      properties:
        id:
          type: integer
          format: int32
        canUpdate:
          type: boolean
        canUpdateInt:
          type: integer
          format: int32
      additionalProperties: false
    DepartmentFunctionPrivilege:
      type: object
      properties:
        id:
          type: integer
          format: int32
        functionIds:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
      additionalProperties: false
    MachinePrivilege:
      type: object
      properties:
        id:
          type: integer
          format: int32
        canUpdate:
          type: boolean
        canUpdateInt:
          type: integer
          format: int32
      additionalProperties: false
    MachineGroupPrivilege:
      type: object
      properties:
        id:
          type: integer
          format: int32
        canUpdate:
          type: boolean
        canUpdateInt:
          type: integer
          format: int32
      additionalProperties: false
    Permissions:
      type: object
      properties:
        accessCodePrivileges:
          type: array
          items:
            $ref: '#/components/schemas/AccessCodePrivilege'
          nullable: true
        departmentFunctionPrivileges:
          type: array
          items:
            $ref: '#/components/schemas/DepartmentFunctionPrivilege'
          nullable: true
        machinePrivileges:
          type: array
          items:
            $ref: '#/components/schemas/MachinePrivilege'
          nullable: true
        machineGroupPrivileges:
          type: array
          items:
            $ref: '#/components/schemas/MachineGroupPrivilege'
          nullable: true
        accessibleScheduleIds:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        accessibleEmbeddedScriptIds:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        accessibleServiceRequestIds:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        accessibleBatchUserIds:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
      additionalProperties: false
    Role:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ApiError'
          nullable: true
        properties:
          type: array
          items:
            $ref: '#/components/schemas/AuxillaryProperty'
          nullable: true
        resourceName:
          type: string
          nullable: true
          readOnly: true
        id:
          type: integer
          description: "Numeric id of the role.\r\noptional"
          format: int32
        name:
          type: string
          description: "Name of the role.Must be unique.\r\noptional"
          nullable: true
        users:
          type: array
          items:
            $ref: '#/components/schemas/User'
          nullable: true
        inheritAllSchedulePrivileges:
          type: boolean
          description: "When true, this role's privileges will be applied to all schedules.\r\noptional"
          nullable: true
        inheritAllMachinePrivileges:
          type: boolean
          description: "When true, this role's privileges will be applied to all machines.\r\noptional"
          nullable: true
        inheritAllMachineGroupPrivileges:
          type: boolean
          description: "When true, this role's privileges will be applied to all machine groups.\r\noptional"
          nullable: true
        inheritAllEmbeddedScriptPrivileges:
          type: boolean
          description: "When true, this role's privileges will be applied to all embeddedscripts.\r\noptional"
          nullable: true
        permissions:
          $ref: '#/components/schemas/Permissions'
      additionalProperties: false
    BatchUser:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ApiError'
          nullable: true
        properties:
          type: array
          items:
            $ref: '#/components/schemas/AuxillaryProperty'
          nullable: true
        resourceName:
          type: string
          nullable: true
          readOnly: true
        id:
          type: integer
          description: Id of the batch user
          format: int32
          nullable: true
        platform:
          $ref: '#/components/schemas/Platform'
        loginName:
          type: string
          description: User name for the batch user
          nullable: true
        password:
          type: string
          description: "This field is not returned on a GET request.It may be sent in a POST request.If the filed is null in a PUT request, it gets ignored and the existing value is unchanged.\r\noptional"
          nullable: true
        roles:
          type: array
          items:
            $ref: '#/components/schemas/Role'
          description: "Roles associated with this batch user\r\noptional"
          nullable: true
        updateJobs:
          type: boolean
        previousLoginName:
          type: string
          nullable: true
      additionalProperties: false
    FinishOkBehavior:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ApiError'
          nullable: true
        properties:
          type: array
          items:
            $ref: '#/components/schemas/AuxillaryProperty'
          nullable: true
        type:
          type: string
          nullable: true
        actionOnOverlap:
          type: string
          nullable: true
        instanceTimes:
          type: array
          items:
            type: string
          nullable: true
        numberOfRuns:
          type: integer
          format: int32
          nullable: true
        latestRunTimeOffset:
          type: integer
          format: int32
          nullable: true
        minutesFromEndToStart:
          type: integer
          format: int32
          nullable: true
        minutesFromStartToStart:
          type: integer
          format: int32
          nullable: true
        resourceName:
          type: string
          nullable: true
          readOnly: true
      additionalProperties: false
    StartTimeEstimation:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ApiError'
          nullable: true
        properties:
          type: array
          items:
            $ref: '#/components/schemas/AuxillaryProperty'
          nullable: true
        estimationSource:
          type: string
          nullable: true
        estimatedRunTime:
          type: integer
          format: int32
        predictedStartTimeOffset:
          type: integer
          format: int32
          nullable: true
        resourceName:
          type: string
          nullable: true
          readOnly: true
      additionalProperties: false
    JobExecution:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ApiError'
          nullable: true
        properties:
          type: array
          items:
            $ref: '#/components/schemas/AuxillaryProperty'
          nullable: true
        samPriority:
          type: integer
          format: int32
        maxRunTime:
          type: integer
          format: int32
        resourceName:
          type: string
          nullable: true
          readOnly: true
      additionalProperties: false
    RetryBehavior:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ApiError'
          nullable: true
        properties:
          type: array
          items:
            $ref: '#/components/schemas/AuxillaryProperty'
          nullable: true
        retryOnFail:
          type: boolean
        minutesBetweenAttempts:
          type: integer
          format: int32
          nullable: true
        maximumAttempts:
          type: integer
          format: int32
          nullable: true
        resourceName:
          type: string
          nullable: true
          readOnly: true
      additionalProperties: false
    JobTimesEstimation:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ApiError'
          nullable: true
        properties:
          type: array
          items:
            $ref: '#/components/schemas/AuxillaryProperty'
          nullable: true
        parentScheduleStartTime:
          type: string
          nullable: true
        startOffsetTimeFormat:
          type: string
          nullable: true
        startOffset:
          type: integer
          format: int32
        latestStartOffset:
          type: integer
          format: int32
        latestStartOffsetTimeFormat:
          type: string
          nullable: true
        lateToFinishOffset:
          type: integer
          format: int32
          nullable: true
        lateToStartOffset:
          type: integer
          format: int32
          nullable: true
        resourceName:
          type: string
          nullable: true
          readOnly: true
      additionalProperties: false
    JobStatus:
      type: object
      properties:
        id:
          type: integer
          format: int32
        startStatus:
          type: integer
          format: int32
          nullable: true
        description:
          type: string
          nullable: true
        category:
          type: string
          nullable: true
        changeReason:
          type: string
          nullable: true
      additionalProperties: false
    Frequency:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ApiError'
          nullable: true
        properties:
          type: array
          items:
            $ref: '#/components/schemas/AuxillaryProperty'
          nullable: true
        resourceName:
          type: string
          nullable: true
          readOnly: true
        scheduleId:
          type: integer
          format: int32
        jobName:
          type: string
          nullable: true
        frequencyCode:
          type: integer
          format: int32
        name:
          type: string
          description: The name of the **frequency**
          nullable: true
        finishOkBehavior:
          $ref: '#/components/schemas/FinishOkBehavior'
        startTimeEstimation:
          $ref: '#/components/schemas/StartTimeEstimation'
        jobExecution:
          $ref: '#/components/schemas/JobExecution'
        retryBehavior:
          $ref: '#/components/schemas/RetryBehavior'
        jobTimesEstimation:
          $ref: '#/components/schemas/JobTimesEstimation'
        overlapAction:
          type: string
          nullable: true
        maximumAttempts:
          type: integer
          format: int32
          nullable: true
        minutesBetweenAttempts:
          type: integer
          format: int32
          nullable: true
        startTimeEstimationSource:
          type: string
          nullable: true
        predictedStartTimeOffset:
          type: string
          nullable: true
        recurringInstanceTimes:
          type: array
          items:
            type: string
          nullable: true
        lateToFinishOffset:
          type: string
          nullable: true
        lateToStartOffset:
          type: string
          nullable: true
        minutesFromStartToStart:
          type: integer
          format: int32
          nullable: true
        minutesFromEndToStart:
          type: integer
          format: int32
          nullable: true
        latestRunTime:
          type: string
          nullable: true
        numberOfRuns:
          type: integer
          format: int32
          nullable: true
        parentDoubleScheduleTime:
          type: number
          format: double
        parentDoubleScheduleDate:
          type: number
          format: double
        startOffset:
          type: string
          nullable: true
        startOffsetTimeFormat:
          type: string
          nullable: true
        latestStartOffset:
          type: string
          nullable: true
        latestStartOffsetTimeFormat:
          type: string
          nullable: true
        estimatedRunTime:
          type: integer
          format: int32
        samPriority:
          type: integer
          format: int32
        maxRunTime:
          type: integer
          format: int32
        startStatus:
          $ref: '#/components/schemas/JobStatus'
      additionalProperties: false
      description: A **frequency**
    ScheduleAutoBuildSettings:
      type: object
      properties:
        numberOfDaysInAdvance:
          type: integer
          format: int32
          nullable: true
        daysToBuild:
          type: integer
          format: int32
          nullable: true
        overwrite:
          type: boolean
        buildOnHold:
          type: boolean
        buildOffset:
          type: integer
          format: int32
          nullable: true
      additionalProperties: false
    InstanceProperty:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ApiError'
          nullable: true
        properties:
          type: array
          items:
            $ref: '#/components/schemas/AuxillaryProperty'
          nullable: true
        key:
          type: string
          nullable: true
        value:
          type: string
          nullable: true
        resourceName:
          type: string
          nullable: true
          readOnly: true
      additionalProperties: false
    BaseMultiInstanceDetails:
      type: object
      properties:
        type:
          type: string
          nullable: true
          readOnly: true
      additionalProperties: false
    MasterSchedule:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ApiError'
          nullable: true
        properties:
          type: array
          items:
            $ref: '#/components/schemas/AuxillaryProperty'
          nullable: true
        resourceName:
          type: string
          nullable: true
          readOnly: true
        calendar:
          $ref: '#/components/schemas/Calendar'
        frequency:
          $ref: '#/components/schemas/Frequency'
        sam:
          type: integer
          format: int32
        start:
          type: number
          format: double
        weekdays:
          type: integer
          format: int32
        isNamedInstance:
          type: boolean
        instanceProperties:
          type: array
          items:
            type: string
          nullable: true
        isMultiInstance:
          type: boolean
        autoBuildDaysToBuild:
          type: integer
          format: int32
          nullable: true
        autoBuildDaysInAdvance:
          type: integer
          format: int32
          nullable: true
        autoBuildOverwrite:
          type: boolean
        autoBuildOnHold:
          type: boolean
        autoBuildTime:
          type: number
          format: double
          nullable: true
        machineGroupToBuildFor:
          type: integer
          format: int32
          nullable: true
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        autoBuildSettings:
          $ref: '#/components/schemas/ScheduleAutoBuildSettings'
        propertiesList:
          type: array
          items:
            $ref: '#/components/schemas/InstanceProperty'
          nullable: true
        multiInstanceDetails:
          $ref: '#/components/schemas/BaseMultiInstanceDetails'
        subSchedule:
          type: boolean
      additionalProperties: false
    Calendar:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ApiError'
          nullable: true
        properties:
          type: array
          items:
            $ref: '#/components/schemas/AuxillaryProperty'
          nullable: true
        id:
          type: integer
          description: The id of the **calendar**
          format: int32
          nullable: true
        schedule:
          $ref: '#/components/schemas/MasterSchedule'
        type:
          type: integer
          description: The type of the **calendar**
          format: int32
        name:
          type: string
          description: The name of the **calendar**
          nullable: true
        dates:
          type: array
          items:
            type: string
          description: The dates for this **calendar**
          nullable: true
        description:
          type: string
          description: The description of the **calendar**
          nullable: true
        resourceName:
          type: string
          nullable: true
          readOnly: true
      additionalProperties: false
      description: 'A calendar with id, type, Schedule, Dates and name fields'
    DailyJobId:
      required:
        - id
      type: object
      properties:
        id:
          type: string
      additionalProperties: false
    SmaUserModel:
      required:
        - id
      type: object
      properties:
        id:
          maximum: 32767
          minimum: 0
          type: integer
          format: int32
        name:
          maxLength: 50
          minLength: 0
          type: string
          nullable: true
      additionalProperties: false
    JobEventDetailsModel:
      required:
        - parameters
        - type
      type: object
      properties:
        name:
          type: string
          nullable: true
        type:
          type: string
        category:
          type: string
          nullable: true
        parameters:
          type: object
          additionalProperties:
            type: string
      additionalProperties: false
    JobEventFrequencyModel:
      required:
        - name
      type: object
      properties:
        name:
          type: string
      additionalProperties: false
    DailyJobEventModel:
      required:
        - event
        - frequency
        - job
        - trigger
        - user
      type: object
      properties:
        job:
          $ref: '#/components/schemas/DailyJobId'
        user:
          $ref: '#/components/schemas/SmaUserModel'
        trigger:
          type: object
          additionalProperties:
            type: string
        event:
          $ref: '#/components/schemas/JobEventDetailsModel'
        frequency:
          $ref: '#/components/schemas/JobEventFrequencyModel'
        id:
          type: integer
          format: int32
      additionalProperties: false
    DailyJobDocumentation:
      type: object
      properties:
        id:
          type: integer
          format: int32
          nullable: true
        frequency:
          type: string
          nullable: true
        job:
          type: string
          nullable: true
      additionalProperties: false
    DailyJobDetails:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ApiError'
          nullable: true
        properties:
          type: array
          items:
            $ref: '#/components/schemas/AuxillaryProperty'
          nullable: true
        resourceName:
          type: string
          nullable: true
          readOnly: true
        subType:
          type: string
          nullable: true
        jobSubType:
          type: string
          nullable: true
        calculatedStartTime:
          type: string
          format: date-time
          nullable: true
        id:
          type: string
          nullable: true
        documentation:
          $ref: '#/components/schemas/DailyJobDocumentation'
        jobAction:
          type: string
          nullable: true
        supportedFeatures:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    DailyJobFeedback:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ApiError'
          nullable: true
        properties:
          type: array
          items:
            $ref: '#/components/schemas/AuxillaryProperty'
          nullable: true
        resourceName:
          type: string
          nullable: true
          readOnly: true
      additionalProperties: false
    Department:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
      additionalProperties: false
    LsamType:
      type: object
      properties:
        id:
          type: integer
          format: int32
        description:
          type: string
          nullable: true
      additionalProperties: false
    MachineGroupType:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ApiError'
          nullable: true
        properties:
          type: array
          items:
            $ref: '#/components/schemas/AuxillaryProperty'
          nullable: true
        id:
          type: integer
          format: int32
          nullable: true
        description:
          type: string
          nullable: true
        resourceName:
          type: string
          nullable: true
          readOnly: true
      additionalProperties: false
    MachineGroup:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ApiError'
          nullable: true
        properties:
          type: array
          items:
            $ref: '#/components/schemas/AuxillaryProperty'
          nullable: true
        id:
          type: integer
          format: int32
          nullable: true
        documentation:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        type:
          $ref: '#/components/schemas/MachineGroupType'
        machines:
          type: array
          items:
            $ref: '#/components/schemas/Machine'
          nullable: true
        resourceName:
          type: string
          nullable: true
          readOnly: true
      additionalProperties: false
    MachineStatus:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ApiError'
          nullable: true
        properties:
          type: array
          items:
            $ref: '#/components/schemas/AuxillaryProperty'
          nullable: true
        state:
          type: string
          nullable: true
        networkStatus:
          type: string
          nullable: true
        operationStatus:
          type: string
          nullable: true
        resourceName:
          type: string
          nullable: true
          readOnly: true
      additionalProperties: false
    Machine:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ApiError'
          nullable: true
        properties:
          type: array
          items:
            $ref: '#/components/schemas/AuxillaryProperty'
          nullable: true
        osType:
          type: string
          nullable: true
        agentVersion:
          type: string
          nullable: true
        osVersion:
          type: string
          nullable: true
        useTlSforSchedulingCommunications:
          type: boolean
          nullable: true
        name:
          type: string
          nullable: true
        id:
          type: integer
          format: int32
          nullable: true
        type:
          $ref: '#/components/schemas/LsamType'
        socket:
          type: integer
          format: int32
          nullable: true
        gatewayId:
          type: integer
          format: int32
          nullable: true
        groups:
          type: array
          items:
            $ref: '#/components/schemas/MachineGroup'
          nullable: true
        lastUpdateDateTime:
          type: string
          nullable: true
        lastUpdate:
          type: number
          format: double
          nullable: true
        maximumJobs:
          type: integer
          format: int32
          nullable: true
        opConMaximumJobs:
          type: integer
          format: int32
          nullable: true
        currentJobs:
          type: integer
          format: int32
          nullable: true
        state:
          $ref: '#/components/schemas/MachineStatus'
        resourceName:
          type: string
          nullable: true
          readOnly: true
        requiresXmlEscape:
          type: boolean
          nullable: true
        agentSmaCommunicationsProtocol:
          type: string
          nullable: true
        allowKillJob:
          type: boolean
          nullable: true
        tcpIpAddress:
          type: string
          nullable: true
        pollInterval:
          type: integer
          format: int32
          nullable: true
        checkMachineStatusInterval:
          type: integer
          format: int32
          nullable: true
        connectionAttemptTimeout:
          type: integer
          format: int32
          nullable: true
        noBufferRetryCount:
          type: integer
          format: int32
          nullable: true
        noBufferSleepTime:
          type: integer
          format: int32
          nullable: true
        maxConsecutiveSendMessages:
          type: integer
          format: int32
          nullable: true
        consecutiveSendSleepTimeMilliseconds:
          type: integer
          format: int32
          nullable: true
        sendBufferCount:
          type: integer
          format: int32
          nullable: true
        receiveBufferCount:
          type: integer
          format: int32
          nullable: true
        maxBytesSentPerMessage:
          type: integer
          format: int32
          nullable: true
        maxBytesReadPerMessage:
          type: integer
          format: int32
          nullable: true
        responseTimeoutInSeconds:
          type: integer
          format: int32
          nullable: true
        agentCheckCrc:
          type: boolean
          nullable: true
        closeSocketDuringSynchronization:
          type: boolean
          nullable: true
        traceAllMessages:
          type: boolean
          nullable: true
        smaNetComIdentifier:
          type: string
          nullable: true
        gatewayName:
          type: string
          nullable: true
        jorsPortNumber:
          type: integer
          format: int32
          nullable: true
        fileTransferRole:
          type: string
          nullable: true
        fileTransferIpAddress:
          type: string
          nullable: true
        availableProperties:
          type: array
          items:
            type: array
            items:
              $ref: '#/components/schemas/InstanceProperty'
          nullable: true
        fileTransferPortNumberForNonTls:
          type: integer
          format: int32
          nullable: true
        fileTransferPortNumberForTls:
          type: integer
          format: int32
          nullable: true
        agentFileTransferPortNumberForTls:
          type: string
          nullable: true
        lsamTime:
          type: number
          format: double
          nullable: true
        lsamTimeDeltafromSam:
          type: integer
          format: int32
          nullable: true
        fullyQualifiedDomainName:
          type: string
          nullable: true
        fullFileTransferSupport:
          type: boolean
          nullable: true
        supportsHandshake:
          type: string
          nullable: true
        tlsCertificateDistinguishedName:
          type: string
          nullable: true
        checkCertificateRevocaionList:
          type: boolean
          nullable: true
        supportTlsForSmaftAgent:
          type: boolean
          nullable: true
        agentSupportTlsForSmaftAgent:
          type: string
          nullable: true
        supportTlsForSmaftServer:
          type: boolean
          nullable: true
        agentSupportTlsForSmaftServer:
          type: string
          nullable: true
        supportNonTlsForSmaftAgent:
          type: boolean
          nullable: true
        agentSupportNonTlsForSmaftAgent:
          type: string
          nullable: true
        supportNonTlsForSmaftServer:
          type: boolean
          nullable: true
        agentSupportNonTlsForSmaftServer:
          type: string
          nullable: true
        timeOffsetfromUtcInHours:
          type: number
          format: double
          nullable: true
        timeZoneName:
          type: string
          nullable: true
        timeOffsetfromSamInHours:
          type: number
          format: double
          nullable: true
        timeSent:
          type: string
          nullable: true
        hostname:
          type: string
          nullable: true
        agentName:
          type: string
          nullable: true
        agentSocket:
          type: string
          nullable: true
        jorsSocket:
          type: string
          nullable: true
        smaftServerPortForNonTls:
          type: string
          nullable: true
        smaftAgentPort:
          type: string
          nullable: true
        machineMaximumJobs:
          type: string
          nullable: true
        smaCommunicationsProtocol:
          type: string
          nullable: true
        checkCrc:
          type: string
          nullable: true
        closeSocket:
          type: string
          nullable: true
        acceptMessagesfromIp:
          type: string
          nullable: true
        smaNetComSocket:
          type: string
          nullable: true
        cpuid:
          type: string
          nullable: true
        cpuType:
          type: string
          nullable: true
        cpuModel:
          type: string
          nullable: true
        cpuCount:
          type: string
          nullable: true
        fileTransferFeature:
          type: string
          nullable: true
        jorsFeature:
          type: string
          nullable: true
        resourceMonitorFeature:
          type: string
          nullable: true
        agentSpecialFeatures:
          type: string
          nullable: true
        tlsCertificateSerialNumber:
          type: string
          nullable: true
        supportedAgentCapability:
          type: array
          items:
            type: string
          nullable: true
        documentation:
          type: string
          nullable: true
        hpNonStopIpAddress:
          type: string
          nullable: true
        hpNonStopSocketNumber:
          type: integer
          format: int32
          nullable: true
      additionalProperties: false
    ComputedTime:
      type: object
      properties:
        time:
          type: string
          nullable: true
        isEstimated:
          type: boolean
        programmedFor:
          type: string
          nullable: true
        consideredLateAt:
          type: string
          nullable: true
        latestStart:
          type: string
          nullable: true
      additionalProperties: false
    ScheduleStatus:
      type: object
      properties:
        id:
          type: integer
          format: int32
        description:
          type: string
          nullable: true
        category:
          type: string
          nullable: true
        containsFailedJobs:
          type: boolean
          nullable: true
      additionalProperties: false
    Schedule:
      type: object
      properties:
        uid:
          type: integer
          format: int64
          nullable: true
        dateAsInteger:
          type: integer
          format: int32
        id:
          type: string
          nullable: true
        masterId:
          type: integer
          format: int32
        computedStartTime:
          $ref: '#/components/schemas/ComputedTime'
        definedStartTime:
          type: string
          nullable: true
        endTime:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        status:
          $ref: '#/components/schemas/ScheduleStatus'
        instance:
          type: integer
          format: int32
          nullable: true
        duration:
          type: integer
          format: int64
          nullable: true
        date:
          type: string
          nullable: true
        path:
          type: string
          nullable: true
        containerJobId:
          type: string
          nullable: true
      additionalProperties: false
    ComputedDuration:
      type: object
      properties:
        duration:
          type: integer
          format: int64
        isEstimated:
          type: boolean
      additionalProperties: false
    ThresholdResourceDailyJob:
      type: object
      properties:
        id:
          type: string
          nullable: true
      additionalProperties: false
    Threshold:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ApiError'
          nullable: true
        properties:
          type: array
          items:
            $ref: '#/components/schemas/AuxillaryProperty'
          nullable: true
        dependentDailyJobs:
          type: array
          items:
            $ref: '#/components/schemas/ThresholdResourceDailyJob'
          nullable: true
        updatedByDailyJobs:
          type: array
          items:
            $ref: '#/components/schemas/ThresholdResourceDailyJob'
          nullable: true
        id:
          type: integer
          format: int32
          nullable: true
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        value:
          type: integer
          format: int32
          nullable: true
        resourceName:
          type: string
          nullable: true
          readOnly: true
      additionalProperties: false
    DailyJobThresholdDependency:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ApiError'
          nullable: true
        properties:
          type: array
          items:
            $ref: '#/components/schemas/AuxillaryProperty'
          nullable: true
        id:
          type: integer
          format: int32
          nullable: true
        threshold:
          $ref: '#/components/schemas/Threshold'
        value:
          type: integer
          format: int32
        operator:
          type: string
          nullable: true
        frequency:
          $ref: '#/components/schemas/Frequency'
        resourceName:
          type: string
          nullable: true
          readOnly: true
      additionalProperties: false
    Resource:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ApiError'
          nullable: true
        properties:
          type: array
          items:
            $ref: '#/components/schemas/AuxillaryProperty'
          nullable: true
        dependentDailyJobs:
          type: array
          items:
            $ref: '#/components/schemas/ThresholdResourceDailyJob'
          nullable: true
        updatedByDailyJobs:
          type: array
          items:
            $ref: '#/components/schemas/ThresholdResourceDailyJob'
          nullable: true
        id:
          type: integer
          format: int32
          nullable: true
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        value:
          type: integer
          format: int32
          nullable: true
        used:
          type: integer
          format: int32
          nullable: true
        resourceName:
          type: string
          nullable: true
          readOnly: true
      additionalProperties: false
    DailyJobResourceDependency:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ApiError'
          nullable: true
        properties:
          type: array
          items:
            $ref: '#/components/schemas/AuxillaryProperty'
          nullable: true
        id:
          type: integer
          format: int32
          nullable: true
        resource:
          $ref: '#/components/schemas/Resource'
        requires:
          type: integer
          format: int32
          nullable: true
        requiresAll:
          type: boolean
          nullable: true
        frequency:
          $ref: '#/components/schemas/Frequency'
        resourceName:
          type: string
          nullable: true
          readOnly: true
      additionalProperties: false
    DailyJobEventJobStatus:
      type: object
      properties:
        id:
          type: integer
          format: int32
          nullable: true
        status:
          type: string
          nullable: true
      additionalProperties: false
    ThresholdResourceUpdateFrequency:
      type: object
      properties:
        name:
          type: string
          nullable: true
      additionalProperties: false
    DailyJobThresholdResourceUpdate:
      type: object
      properties:
        id:
          type: integer
          format: int64
          nullable: true
        resource:
          $ref: '#/components/schemas/Resource'
        threshold:
          $ref: '#/components/schemas/Threshold'
        value:
          type: integer
          format: int32
          nullable: true
        status:
          $ref: '#/components/schemas/DailyJobEventJobStatus'
        frequency:
          $ref: '#/components/schemas/ThresholdResourceUpdateFrequency'
        jobName:
          type: string
          nullable: true
        scheduleId:
          type: integer
          format: int32
      additionalProperties: false
    DailyJobDependencyType:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ApiError'
          nullable: true
        properties:
          type: array
          items:
            $ref: '#/components/schemas/AuxillaryProperty'
          nullable: true
        resourceName:
          type: string
          nullable: true
          readOnly: true
        id:
          type: integer
          description: The id of the job dependency **type**
          format: int32
        name:
          type: string
          description: The name of the job dependency **type**
          nullable: true
        condition:
          type: string
          description: The condition of the job dependency **type**
          nullable: true
        checkAllDays:
          type: boolean
          description: The check all days value of the job dependency **type**
          nullable: true
        offset:
          type: integer
          description: The offset in days of the job dependency **type**
          format: int32
          nullable: true
        jobNameLike:
          type: string
          description: The job name like value of the job dependency **type**
          nullable: true
        categories:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
      description: A job dependency **type**
    MasterJobProperty:
      type: object
      properties:
        id:
          type: integer
          format: int32
        jobName:
          type: string
          nullable: true
        fieldCode:
          type: integer
          format: int32
        sequenceNumber:
          type: integer
          format: int32
        value:
          type: string
          nullable: true
      additionalProperties: false
    MasterJob:
      type: object
      properties:
        id:
          type: string
          nullable: true
        department:
          $ref: '#/components/schemas/Department'
        jobGroup:
          type: integer
          format: int32
        jobName:
          type: string
          nullable: true
        frequency:
          $ref: '#/components/schemas/Frequency'
        type:
          $ref: '#/components/schemas/LsamType'
        accessCode:
          $ref: '#/components/schemas/AccessCode'
        machine:
          $ref: '#/components/schemas/Machine'
        alternateMachine:
          $ref: '#/components/schemas/Machine'
        alternateMachine2:
          $ref: '#/components/schemas/Machine'
        alternateMachine3:
          $ref: '#/components/schemas/Machine'
        machineGroup:
          $ref: '#/components/schemas/MachineGroup'
        schedule:
          $ref: '#/components/schemas/MasterSchedule'
        estimatedRunTime:
          type: integer
          format: int32
          nullable: true
        shortName:
          type: string
          nullable: true
        properties:
          type: array
          items:
            $ref: '#/components/schemas/MasterJobProperty'
          nullable: true
      additionalProperties: false
    NamedInstance:
      type: object
      properties:
        scheduleId:
          type: integer
          format: int32
        number:
          type: integer
          format: int32
        id:
          type: integer
          description: The id of a **named instance**
          format: int32
        name:
          type: string
          description: The name of a **named instance**
          nullable: true
      additionalProperties: false
      description: A **named instance**
    JobDependencyPredecessorSchedule:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ApiError'
          nullable: true
        properties:
          type: array
          items:
            $ref: '#/components/schemas/AuxillaryProperty'
          nullable: true
        resourceName:
          type: string
          nullable: true
          readOnly: true
        scheduleId:
          type: integer
          format: int32
        scheduleName:
          type: string
          nullable: true
        id:
          type: string
          description: 'The id of the job dependency predecessor schedule, if the daily schedule exists'
          nullable: true
        date:
          type: string
          description: 'The date of the job dependency predecessor schedule, if the daily schedule exists'
          nullable: true
        name:
          type: string
          description: The name of the job dependency predecessor schedule
          nullable: true
        namedInstance:
          $ref: '#/components/schemas/NamedInstance'
      additionalProperties: false
      description: A job dependency predecessor schedule
    JobDependencyPredecessor:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ApiError'
          nullable: true
        properties:
          type: array
          items:
            $ref: '#/components/schemas/AuxillaryProperty'
          nullable: true
        resourceName:
          type: string
          nullable: true
          readOnly: true
        masterJob:
          $ref: '#/components/schemas/MasterJob'
        jobStatus:
          type: integer
          format: int32
          nullable: true
        startStatus:
          type: integer
          format: int32
          nullable: true
        statusCategory:
          type: string
          nullable: true
        schedule:
          $ref: '#/components/schemas/JobDependencyPredecessorSchedule'
        id:
          type: string
          description: 'The daily job id of the job dependency **predecessor**, if the daily job exists'
          nullable: true
        name:
          type: string
          description: The job name of the job dependency **predecessor**
          nullable: true
        status:
          type: string
          description: 'The status of the job dependency **predecessor**, if the daily job exists'
          nullable: true
      additionalProperties: false
      description: A job dependency **predecessor**
    DailyJobDependency:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ApiError'
          nullable: true
        properties:
          type: array
          items:
            $ref: '#/components/schemas/AuxillaryProperty'
          nullable: true
        scheduleId:
          type: integer
          format: int32
        scheduleInstanceNumber:
          type: integer
          format: int32
        jobName:
          type: string
          nullable: true
        id:
          type: integer
          description: The id of the **job dependency**
          format: int64
        frequency:
          $ref: '#/components/schemas/Frequency'
        type:
          $ref: '#/components/schemas/DailyJobDependencyType'
        predecessor:
          $ref: '#/components/schemas/JobDependencyPredecessor'
        resourceName:
          type: string
          nullable: true
          readOnly: true
        scheduleDate:
          type: integer
          format: int32
        isSatisfied:
          type: boolean
          description: The status of the **daily job dependency**
      additionalProperties: false
      description: A daily **job dependency**
    DailyJobExpressionDependencyCollection:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ApiError'
          nullable: true
        properties:
          type: array
          items:
            $ref: '#/components/schemas/AuxillaryProperty'
          nullable: true
        id:
          type: integer
          description: The expression dependecy unique identifier
          format: int32
          nullable: true
        expression1:
          type: string
          description: The string value for the expression.
          nullable: true
        expression2:
          type: string
          description: The string value for the expression.
          nullable: true
        resourceName:
          type: string
          nullable: true
          readOnly: true
      additionalProperties: false
    DailyJobProperty:
      type: object
      properties:
        fieldCode:
          type: integer
          format: int32
        sequenceNumber:
          type: integer
          format: int32
        value:
          type: string
          nullable: true
        scheduleDate:
          type: integer
          format: int32
        id:
          type: integer
          format: int32
        instance:
          type: integer
          format: int32
        jobName:
          type: string
          nullable: true
      additionalProperties: false
    DailyJob:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ApiError'
          nullable: true
        properties:
          type: array
          items:
            $ref: '#/components/schemas/DailyJobProperty'
          nullable: true
        resourceName:
          type: string
          nullable: true
          readOnly: true
        uid:
          type: integer
          format: int64
          nullable: true
        uniqueJobId:
          type: string
          nullable: true
        details:
          $ref: '#/components/schemas/DailyJobDetails'
        feedback:
          $ref: '#/components/schemas/DailyJobFeedback'
        department:
          $ref: '#/components/schemas/Department'
        instanceProperties:
          type: array
          items:
            $ref: '#/components/schemas/InstanceProperty'
          nullable: true
        steps:
          type: array
          items:
            type: string
          nullable: true
        id:
          type: string
          nullable: true
        priority:
          type: integer
          format: int32
        jobName:
          type: string
          nullable: true
        frequency:
          $ref: '#/components/schemas/Frequency'
        jobNumber:
          type: integer
          format: int32
        jorsRequestParameters:
          type: string
          nullable: true
        incidentTicketId:
          type: string
          nullable: true
        incidentTicketURL:
          type: string
          nullable: true
        type:
          $ref: '#/components/schemas/LsamType'
        accessCode:
          $ref: '#/components/schemas/AccessCode'
        machine:
          $ref: '#/components/schemas/Machine'
        alternateMachine:
          $ref: '#/components/schemas/Machine'
        alternateMachine2:
          $ref: '#/components/schemas/Machine'
        alternateMachine3:
          $ref: '#/components/schemas/Machine'
        machineGroup:
          $ref: '#/components/schemas/MachineGroup'
        startMachine:
          $ref: '#/components/schemas/Machine'
        tags:
          type: array
          items:
            type: string
          nullable: true
        jobStatus:
          $ref: '#/components/schemas/JobStatus'
        schedule:
          $ref: '#/components/schemas/Schedule'
        terminationDescription:
          type: string
          nullable: true
        computedStartTime:
          $ref: '#/components/schemas/ComputedTime'
        computedEndTime:
          $ref: '#/components/schemas/ComputedTime'
        computedDuration:
          $ref: '#/components/schemas/ComputedDuration'
        documentation:
          $ref: '#/components/schemas/DailyJobDocumentation'
        thresholdDependencies:
          type: array
          items:
            $ref: '#/components/schemas/DailyJobThresholdDependency'
          nullable: true
        resourceDependencies:
          type: array
          items:
            $ref: '#/components/schemas/DailyJobResourceDependency'
          nullable: true
        thresholdUpdates:
          type: array
          items:
            $ref: '#/components/schemas/DailyJobThresholdResourceUpdate'
          nullable: true
        resourceUpdates:
          type: array
          items:
            $ref: '#/components/schemas/DailyJobThresholdResourceUpdate'
          nullable: true
        dependencies:
          type: array
          items:
            $ref: '#/components/schemas/DailyJobDependency'
          nullable: true
        events:
          type: array
          items:
            $ref: '#/components/schemas/DailyJobEventModel'
          nullable: true
        expressionDependencies:
          $ref: '#/components/schemas/DailyJobExpressionDependencyCollection'
        detailMessages:
          type: array
          items:
            type: string
          nullable: true
        isRecurrent:
          type: boolean
        features:
          type: array
          items:
            type: string
          nullable: true
        currentStep:
          type: string
          nullable: true
        jobGroup:
          type: integer
          format: int32
        startMachineId:
          type: integer
          format: int32
        startOffset:
          type: number
          format: double
        startAbsoluteRelative:
          type: string
          nullable: true
        lateToStartTime:
          type: number
          format: double
        lateToStartAbsoluteRelative:
          type: string
          nullable: true
        start:
          type: number
          format: double
        termination:
          type: number
          format: double
        estimatedRunTime:
          type: integer
          format: int32
        lastUpdate:
          type: number
          format: double
        maxMinutes:
          type: integer
          format: int32
        originalJobName:
          type: string
          nullable: true
        shortName:
          type: string
          nullable: true
        calculatedStartTime:
          type: number
          format: double
          nullable: true
        startTimeIsEstimated:
          type: boolean
        calculatedEndTime:
          type: number
          format: double
          nullable: true
        endTimeIsEstimated:
          type: boolean
        calculatedDuration:
          type: integer
          format: int64
        durationIsEstimated:
          type: boolean
        subScheduleDailyName:
          type: string
          nullable: true
        subScheduleDailyPath:
          type: string
          nullable: true
        subScheduleDailyInstance:
          type: integer
          format: int32
          nullable: true
        subScheduleDailyId:
          type: integer
          format: int32
          nullable: true
        subScheduleDailyDate:
          type: integer
          format: int32
          nullable: true
        subScheduleMasterName:
          type: string
          nullable: true
        subScheduleMasterId:
          type: integer
          format: int32
          nullable: true
      additionalProperties: false
    DailyJobIncidentTicket:
      type: object
      properties:
        id:
          type: integer
          format: int32
        ticketId:
          type: string
          nullable: true
        ticketUrl:
          type: string
          nullable: true
      additionalProperties: false
    OpConEvent:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ApiError'
          nullable: true
        properties:
          type: array
          items:
            $ref: '#/components/schemas/AuxillaryProperty'
          nullable: true
        eventName:
          type: string
          nullable: true
          readOnly: true
        nickName:
          type: string
          nullable: true
          readOnly: true
        resourceName:
          type: string
          nullable: true
          readOnly: true
      additionalProperties: false
    ActionMessage:
      type: object
      properties:
        to:
          type: string
          description: The receiver(s) of the message
          nullable: true
        cc:
          type: string
          description: The receiver(s) being carbon copied.
          nullable: true
        bcc:
          type: string
          description: The receiver(s) being blind carbon copied
          nullable: true
        subject:
          type: string
          description: The subject of the message
          nullable: true
        body:
          type: string
          description: The body of the message
          nullable: true
      additionalProperties: false
    NotificationMachine:
      type: object
      properties:
        name:
          type: string
          description: The name of machine that will be used for notification
          nullable: true
      additionalProperties: false
    NotificationSchedule:
      type: object
      properties:
        name:
          type: string
          description: Name of schedule
          nullable: true
        instance:
          type: integer
          description: Instance of schedule
          format: int32
          nullable: true
        date:
          type: string
          description: Schedule date
          nullable: true
      additionalProperties: false
    NotificationJob:
      type: object
      properties:
        name:
          type: string
          description: The name assign to the job
          nullable: true
        jobNumber:
          type: integer
          description: The job number
          format: int32
          nullable: true
      additionalProperties: false
    EscalationNotification:
      type: object
      properties:
        actionMessage:
          $ref: '#/components/schemas/ActionMessage'
        machine:
          $ref: '#/components/schemas/NotificationMachine'
        schedule:
          $ref: '#/components/schemas/NotificationSchedule'
        job:
          $ref: '#/components/schemas/NotificationJob'
        triggerName:
          type: string
          description: The name of the escalation trigger
          nullable: true
        action:
          type: string
          description: The action that will take place
          nullable: true
        actionID:
          type: integer
          description: Unique identifer of the action
          format: int32
          nullable: true
        actionName:
          type: string
          description: The name of the action
          nullable: true
        groupOfId:
          type: integer
          description: The unique identifier of the group
          format: int32
          nullable: true
        actionIncludeId:
          type: boolean
          description: Flag for including action id
        notifyDelimiter:
          type: string
          description: Special character used to separate notifications
          nullable: true
      additionalProperties: false
    Escalation:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ApiError'
          nullable: true
        properties:
          type: array
          items:
            $ref: '#/components/schemas/AuxillaryProperty'
          nullable: true
        escalationId:
          type: integer
          description: The unique identifier of the escalation
          format: int32
        escalationRuleId:
          type: integer
          description: The unique rule identifier
          format: int32
        escalationSequence:
          type: integer
          description: The escalation sequence level
          format: int32
        status:
          type: string
          description: The status assigned to the escalation
          nullable: true
        escalationStatus:
          type: integer
          format: int32
        attempts:
          type: integer
          description: The amont of attempts
          format: int32
          nullable: true
        timeMessageSent:
          type: string
          description: Time stamp for last message sent
          nullable: true
        lastMessageSent:
          type: string
          format: date-time
          nullable: true
        actionMessage:
          type: string
          nullable: true
        notification:
          $ref: '#/components/schemas/EscalationNotification'
        triggerName:
          type: string
          nullable: true
        acknowledgedBy:
          type: string
          description: User who acknowledged the escalation
          nullable: true
        acknowledgeTime:
          type: string
          description: The time the escalation was acknowledged
          format: date-time
          nullable: true
        acknowledgeHostName:
          type: string
          description: The host name that acknowledged the notification
          nullable: true
        acknowledged:
          type: boolean
          description: Flag describing whether the notification was acknowledged
        actionIncludeId:
          type: string
          nullable: true
        scheduleDate:
          type: string
          nullable: true
        scheduleName:
          type: string
          nullable: true
        instanceNumber:
          type: integer
          format: int32
        jobName:
          type: string
          nullable: true
        machineName:
          type: string
          nullable: true
        actionId:
          type: integer
          format: int32
        actionName:
          type: string
          nullable: true
        groupOfId:
          type: integer
          format: int32
        notifyDelimiter:
          type: string
          nullable: true
        actionType:
          type: integer
          format: int32
          nullable: true
        matchEscalation:
          $ref: '#/components/schemas/Escalation'
        resourceName:
          type: string
          nullable: true
          readOnly: true
      additionalProperties: false
    ExternalToken:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ApiError'
          nullable: true
        properties:
          type: array
          items:
            $ref: '#/components/schemas/AuxillaryProperty'
          nullable: true
        resourceName:
          type: string
          nullable: true
          readOnly: true
        token:
          type: string
          nullable: true
        length:
          type: integer
          format: int32
          nullable: true
      additionalProperties: false
    FeatureCriteria:
      type: object
      additionalProperties: false
    LsamFeedbackMetaData:
      type: object
      properties:
        id:
          type: integer
          description: The interger value for the given type of LSAM Feeback
          format: int32
        name:
          type: string
          description: The name for the given type of LSAM Feedback
          nullable: true
      additionalProperties: false
    GlobalProperty:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ApiError'
          nullable: true
        properties:
          type: array
          items:
            $ref: '#/components/schemas/AuxillaryProperty'
          nullable: true
        id:
          type: integer
          description: Id for the global property
          format: int32
          nullable: true
        name:
          type: string
          description: Name for the global property
          nullable: true
        value:
          type: string
          description: Text value for the global property
          nullable: true
        encrypted:
          type: boolean
          description: Specifies if the global property is encrypted
        fullName:
          type: string
          description: Full Name of the global property
          nullable: true
        category:
          type: string
          description: 'Category for the global property (GI, MI, SI, JI)'
          nullable: true
        isPatternValue:
          type: boolean
          description: Specifies whether the global property's values is a pattern
        type:
          type: string
          description: 'Global property type (System, User)'
          nullable: true
        isEncrypted:
          type: string
          nullable: true
        resourceName:
          type: string
          nullable: true
          readOnly: true
      additionalProperties: false
    JobStatusItem:
      type: object
      properties:
        id:
          type: string
          nullable: true
        step:
          type: string
          nullable: true
        rebuildOnRestartIfContainer:
          type: boolean
          nullable: true
        result:
          type: string
          nullable: true
        message:
          type: string
          nullable: true
        status:
          $ref: '#/components/schemas/JobStatus'
        responseId:
          type: string
          nullable: true
      additionalProperties: false
    JobAction:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ApiError'
          nullable: true
        properties:
          type: array
          items:
            $ref: '#/components/schemas/AuxillaryProperty'
          nullable: true
        id:
          type: integer
          format: int32
        action:
          type: string
          nullable: true
        reason:
          type: string
          nullable: true
        result:
          type: string
          nullable: true
        jobs:
          type: array
          items:
            $ref: '#/components/schemas/JobStatusItem'
          nullable: true
        expires:
          type: string
          nullable: true
          readOnly: true
        expiryTime:
          type: string
          format: date-time
        resourceName:
          type: string
          nullable: true
          readOnly: true
      additionalProperties: false
    ActionType:
      enum:
        - 0
        - 1
        - 2
      type: integer
      format: int32
    JobInstanceActionItem:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ApiError'
          nullable: true
        properties:
          type: array
          items:
            $ref: '#/components/schemas/AuxillaryProperty'
          nullable: true
        resourceName:
          type: string
          nullable: true
          readOnly: true
        id:
          type: integer
          format: int32
        jorsRequestParameters:
          type: string
          nullable: true
        result:
          type: string
          nullable: true
        message:
          type: string
          nullable: true
        files:
          type: array
          items:
            type: string
          nullable: true
        data:
          type: string
          nullable: true
        requestId:
          type: integer
          format: int64
          nullable: true
      additionalProperties: false
    JobInstanceAction:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ApiError'
          nullable: true
        properties:
          type: array
          items:
            $ref: '#/components/schemas/AuxillaryProperty'
          nullable: true
        resourceName:
          type: string
          nullable: true
          readOnly: true
        id:
          type: integer
          format: int32
        action:
          type: string
          nullable: true
        actionType:
          $ref: '#/components/schemas/ActionType'
        result:
          type: string
          nullable: true
        message:
          type: string
          nullable: true
        jobInstanceActionItems:
          type: array
          items:
            $ref: '#/components/schemas/JobInstanceActionItem'
          nullable: true
        expires:
          type: string
          nullable: true
          readOnly: true
        expiryTime:
          type: string
          format: date-time
        requestIds:
          type: array
          items:
            type: integer
            format: int64
          nullable: true
        userId:
          type: integer
          format: int32
      additionalProperties: false
    SessionLogUser:
      type: object
      properties:
        id:
          type: integer
          format: int32
      additionalProperties: false
    SessionLog:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ApiError'
          nullable: true
        properties:
          type: array
          items:
            $ref: '#/components/schemas/AuxillaryProperty'
          nullable: true
        resourceName:
          type: string
          nullable: true
          readOnly: true
        sessionId:
          type: integer
          format: int64
          nullable: true
        application:
          type: string
          nullable: true
        message:
          type: array
          items:
            type: string
          nullable: true
        id:
          type: string
          nullable: true
        fileDir:
          type: string
          nullable: true
        fileName:
          type: string
          nullable: true
        user:
          $ref: '#/components/schemas/SessionLogUser'
        fileSize:
          type: integer
          format: int64
          nullable: true
        fileAge:
          type: string
          format: date-time
          nullable: true
      additionalProperties: false
    MachineActionItem:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ApiError'
          nullable: true
        properties:
          type: array
          items:
            $ref: '#/components/schemas/AuxillaryProperty'
          nullable: true
        resourceName:
          type: string
          nullable: true
          readOnly: true
        id:
          type: integer
          format: int32
          nullable: true
        requestId:
          type: integer
          format: int64
          nullable: true
        machine:
          $ref: '#/components/schemas/Machine'
        status:
          $ref: '#/components/schemas/MachineStatus'
        result:
          type: string
          nullable: true
        message:
          type: string
          nullable: true
      additionalProperties: false
    MachineAction:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ApiError'
          nullable: true
        properties:
          type: array
          items:
            $ref: '#/components/schemas/AuxillaryProperty'
          nullable: true
        id:
          type: integer
          format: int32
        action:
          type: string
          nullable: true
        result:
          type: string
          nullable: true
        message:
          type: string
          nullable: true
        expires:
          type: string
          nullable: true
          readOnly: true
        expiryTime:
          type: string
          format: date-time
        requestIds:
          type: array
          items:
            type: integer
            format: int64
          nullable: true
        userId:
          type: integer
          format: int32
        machines:
          type: array
          items:
            $ref: '#/components/schemas/MachineActionItem'
          nullable: true
        resourceName:
          type: string
          nullable: true
          readOnly: true
      additionalProperties: false
    MasterInstance:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ApiError'
          nullable: true
        properties:
          type: array
          items:
            $ref: '#/components/schemas/AuxillaryProperty'
          nullable: true
        id:
          type: integer
          format: int32
        tags:
          type: array
          items:
            type: string
          nullable: true
        resourceName:
          type: string
          nullable: true
          readOnly: true
      additionalProperties: false
    RemoteInstanceStatus:
      enum:
        - 1
        - 2
      type: integer
      format: int32
    TransparentNetworkIpResolutionOption:
      enum:
        - 0
        - 1
        - -1
      type: integer
      format: int32
    RemoteInstanceDatabaseConnection:
      type: object
      properties:
        server:
          type: string
          nullable: true
        database:
          type: string
          nullable: true
        windowsAuth:
          type: boolean
        user:
          type: string
          nullable: true
        password:
          type: string
          nullable: true
        mirroring:
          type: boolean
        transparentNetworkIpResolution:
          $ref: '#/components/schemas/TransparentNetworkIpResolutionOption'
      additionalProperties: false
    TokenType:
      type: object
      properties:
        id:
          type: string
          nullable: true
        type:
          type: string
          nullable: true
      additionalProperties: false
    Token:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ApiError'
          nullable: true
        properties:
          type: array
          items:
            $ref: '#/components/schemas/AuxillaryProperty'
          nullable: true
        resourceName:
          type: string
          nullable: true
          readOnly: true
        id:
          type: string
          nullable: true
        user:
          $ref: '#/components/schemas/User'
        tokenType:
          $ref: '#/components/schemas/TokenType'
        validFrom:
          type: string
          format: date-time
          nullable: true
        validUntil:
          type: string
          format: date-time
          nullable: true
        passwordExpired:
          type: boolean
      additionalProperties: false
    RemoteInstance:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ApiError'
          nullable: true
        properties:
          type: array
          items:
            $ref: '#/components/schemas/AuxillaryProperty'
          nullable: true
        status:
          $ref: '#/components/schemas/RemoteInstanceStatus'
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        databaseConnection:
          $ref: '#/components/schemas/RemoteInstanceDatabaseConnection'
        apiBaseUrl:
          type: string
          nullable: true
        solutionManagerBaseUrl:
          type: string
          nullable: true
        adminUser:
          $ref: '#/components/schemas/User'
        adminToken:
          $ref: '#/components/schemas/Token'
        masterInstanceId:
          type: integer
          format: int32
          nullable: true
        connectionString:
          type: string
          nullable: true
        visionActionUsers:
          type: array
          items:
            $ref: '#/components/schemas/User'
          nullable: true
        resourceName:
          type: string
          nullable: true
          readOnly: true
      additionalProperties: false
    VisionFrequency:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ApiError'
          nullable: true
        properties:
          type: array
          items:
            $ref: '#/components/schemas/AuxillaryProperty'
          nullable: true
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        type:
          type: integer
          format: int32
          nullable: true
        dates:
          type: array
          items:
            type: string
          nullable: true
        resourceName:
          type: string
          nullable: true
          readOnly: true
      additionalProperties: false
    Condition:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
      additionalProperties: false
    VisionActionDetail:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ApiError'
          nullable: true
        properties:
          type: array
          items:
            $ref: '#/components/schemas/AuxillaryProperty'
          nullable: true
        id:
          type: integer
          format: int32
        detail:
          type: string
          nullable: true
        actionId:
          type: integer
          format: int32
        resourceName:
          type: string
          nullable: true
          readOnly: true
      additionalProperties: false
    VisionAction:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ApiError'
          nullable: true
        properties:
          type: array
          items:
            $ref: '#/components/schemas/AuxillaryProperty'
          nullable: true
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        actionDetails:
          type: array
          items:
            $ref: '#/components/schemas/VisionActionDetail'
          nullable: true
        resourceName:
          type: string
          nullable: true
          readOnly: true
      additionalProperties: false
    Runnable:
      type: object
      properties:
        id:
          type: integer
          format: int32
        actionId:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        detailId:
          type: integer
          format: int32
        detail:
          type: string
          nullable: true
        action:
          $ref: '#/components/schemas/VisionAction'
        repeatAfterMinutes:
          type: integer
          format: int32
          nullable: true
        remoteInstanceId:
          type: integer
          format: int32
          nullable: true
        remoteInstanceName:
          type: string
          nullable: true
        remoteInstance:
          $ref: '#/components/schemas/RemoteInstance'
        lastRepeated:
          type: string
          format: date-time
          nullable: true
      additionalProperties: false
    TriggerCondition:
      type: object
      properties:
        id:
          type: integer
          format: int32
        statusId:
          type: integer
          format: int32
        condition:
          $ref: '#/components/schemas/Condition'
        runnables:
          type: array
          items:
            $ref: '#/components/schemas/Runnable'
          nullable: true
      additionalProperties: false
    Requirement:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
      additionalProperties: false
    VisionSla:
      type: object
      properties:
        slaId:
          type: integer
          format: int32
        requirement:
          $ref: '#/components/schemas/Requirement'
        time:
          type: string
          nullable: true
        internalTime:
          type: string
          format: date-time
        masterVisionCardFrequencyId:
          type: integer
          format: int32
        offset:
          type: integer
          format: int32
      additionalProperties: false
    MonitoredVisionFrequency:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ApiError'
          nullable: true
        properties:
          type: array
          items:
            $ref: '#/components/schemas/AuxillaryProperty'
          nullable: true
        id:
          type: integer
          format: int32
          nullable: true
        visionFrequency:
          $ref: '#/components/schemas/VisionFrequency'
        triggerConditions:
          type: array
          items:
            $ref: '#/components/schemas/TriggerCondition'
          nullable: true
        slas:
          type: array
          items:
            $ref: '#/components/schemas/VisionSla'
          nullable: true
        resourceName:
          type: string
          nullable: true
          readOnly: true
        masterVisionCardFrequencyId:
          type: integer
          format: int32
      additionalProperties: false
    MasterVisionCard:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ApiError'
          nullable: true
        properties:
          type: array
          items:
            $ref: '#/components/schemas/AuxillaryProperty'
          nullable: true
        id:
          type: integer
          format: int32
        version:
          type: integer
          format: int32
        trackId:
          type: string
          nullable: true
        trackIdInternal:
          type: string
          format: uuid
          nullable: true
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        tagPattern:
          type: string
          nullable: true
        offset:
          type: integer
          format: int32
        qosTolerableThreshold:
          type: integer
          format: int32
          nullable: true
        qosCriticalThreshold:
          type: integer
          format: int32
          nullable: true
        slaTolerableThreshold:
          type: integer
          format: int32
          nullable: true
        slaCriticalThreshold:
          type: integer
          format: int32
          nullable: true
        remoteInstanceId:
          type: integer
          format: int32
          nullable: true
        remoteInstanceName:
          type: string
          nullable: true
        remoteInstance:
          $ref: '#/components/schemas/RemoteInstance'
        parentMasterVisionCard:
          $ref: '#/components/schemas/MasterVisionCard'
        parentId:
          type: integer
          format: int32
        associatedFrequencies:
          type: array
          items:
            $ref: '#/components/schemas/MonitoredVisionFrequency'
          nullable: true
        roleId:
          type: integer
          format: int32
          nullable: true
        roleName:
          type: string
          nullable: true
        associatedRoles:
          type: array
          items:
            $ref: '#/components/schemas/Role'
          nullable: true
        children:
          type: array
          items:
            $ref: '#/components/schemas/MasterVisionCard'
          nullable: true
        resourceName:
          type: string
          nullable: true
          readOnly: true
      additionalProperties: false
    MasterVisionWorkspace:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ApiError'
          nullable: true
        properties:
          type: array
          items:
            $ref: '#/components/schemas/AuxillaryProperty'
          nullable: true
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        masterVisionCards:
          type: array
          items:
            $ref: '#/components/schemas/MasterVisionCard'
          nullable: true
        resourceName:
          type: string
          nullable: true
          readOnly: true
      additionalProperties: false
    SimpleEvent:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ApiError'
          nullable: true
        properties:
          type: array
          items:
            $ref: '#/components/schemas/AuxillaryProperty'
          nullable: true
        id:
          type: integer
          format: int64
          nullable: true
        eventString:
          type: string
          nullable: true
        resourceName:
          type: string
          nullable: true
          readOnly: true
      additionalProperties: false
    OpConEventCollection:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ApiError'
          nullable: true
        properties:
          type: array
          items:
            $ref: '#/components/schemas/AuxillaryProperty'
          nullable: true
        loginName:
          type: string
          nullable: true
        events:
          type: array
          items:
            $ref: '#/components/schemas/SimpleEvent'
          nullable: true
        resourceName:
          type: string
          nullable: true
          readOnly: true
      additionalProperties: false
    PropertyExpression:
      type: object
      properties:
        expression:
          type: string
          nullable: true
        status:
          type: string
          nullable: true
        result:
          type: string
          nullable: true
        message:
          type: string
          nullable: true
      additionalProperties: false
    StringInstanceProperty:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ApiError'
          nullable: true
        properties:
          type: array
          items:
            $ref: '#/components/schemas/AuxillaryProperty'
          nullable: true
        name:
          type: string
          nullable: true
          readOnly: true
        value:
          type: string
          nullable: true
          readOnly: true
        resourceName:
          type: string
          nullable: true
          readOnly: true
      additionalProperties: false
    JobItem:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ApiError'
          nullable: true
        properties:
          type: array
          items:
            $ref: '#/components/schemas/AuxillaryProperty'
          nullable: true
        resourceName:
          type: string
          nullable: true
          readOnly: true
        applyExceptions:
          type: boolean
        id:
          type: string
          nullable: true
        frequency:
          type: string
          nullable: true
        rebuildOnRestartIfContainer:
          type: boolean
          nullable: true
        instanceProperties:
          type: array
          items:
            $ref: '#/components/schemas/StringInstanceProperty'
          nullable: true
        result:
          type: string
          nullable: true
        message:
          type: string
          nullable: true
        uid:
          type: integer
          format: int64
          nullable: true
        requestId:
          type: integer
          format: int64
          nullable: true
      additionalProperties: false
    ScheduleActionItem:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ApiError'
          nullable: true
        properties:
          type: array
          items:
            $ref: '#/components/schemas/AuxillaryProperty'
          nullable: true
        resourceName:
          type: string
          nullable: true
          readOnly: true
        updated:
          type: integer
          format: int32
          nullable: true
        id:
          type: string
          nullable: true
        instanceProperties:
          type: array
          items:
            $ref: '#/components/schemas/StringInstanceProperty'
          nullable: true
        result:
          type: string
          nullable: true
        message:
          type: string
          nullable: true
        jobs:
          type: array
          items:
            $ref: '#/components/schemas/JobItem'
          nullable: true
        status:
          $ref: '#/components/schemas/ScheduleStatus'
        requestId:
          type: integer
          format: int64
          nullable: true
      additionalProperties: false
    ScheduleAction:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ApiError'
          nullable: true
        properties:
          type: array
          items:
            $ref: '#/components/schemas/AuxillaryProperty'
          nullable: true
        id:
          type: integer
          format: int32
        action:
          type: string
          nullable: true
        result:
          type: string
          nullable: true
        message:
          type: string
          nullable: true
        expires:
          type: string
          nullable: true
          readOnly: true
        expiryTime:
          type: string
          format: date-time
        requestIds:
          type: array
          items:
            type: integer
            format: int64
          nullable: true
        userId:
          type: integer
          format: int32
        invalidStates:
          type: array
          items:
            type: string
          nullable: true
        states:
          type: array
          items:
            type: string
          nullable: true
        resourceName:
          type: string
          nullable: true
          readOnly: true
        reason:
          type: string
          nullable: true
        scheduleActionItems:
          type: array
          items:
            $ref: '#/components/schemas/ScheduleActionItem'
          nullable: true
      additionalProperties: false
    ScheduleDateJobItem:
      type: object
      properties:
        id:
          type: string
          nullable: true
        rebuildOnRestartIfContainer:
          type: boolean
          nullable: true
        subScheduleId:
          type: string
          nullable: true
      additionalProperties: false
    ScheduleActionByDate:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ApiError'
          nullable: true
        properties:
          type: array
          items:
            $ref: '#/components/schemas/AuxillaryProperty'
          nullable: true
        action:
          type: string
          nullable: true
        expires:
          type: string
          nullable: true
          readOnly: true
        invalidStates:
          type: array
          items:
            type: string
          nullable: true
        states:
          type: array
          items:
            type: string
          nullable: true
        requestIds:
          type: array
          items:
            type: integer
            format: int64
          nullable: true
        expiryTime:
          type: string
          format: date-time
        userId:
          type: integer
          format: int32
        id:
          type: integer
          format: int32
        scheduleDates:
          type: array
          items:
            type: string
          nullable: true
        scheduleDateActionItems:
          type: array
          items:
            $ref: '#/components/schemas/ScheduleDateJobItem'
          nullable: true
        reason:
          type: string
          nullable: true
        result:
          type: string
          nullable: true
        message:
          type: string
          nullable: true
        updated:
          type: integer
          format: int32
          nullable: true
        resourceName:
          type: string
          nullable: true
          readOnly: true
      additionalProperties: false
    ScheduleBuildRequest:
      type: object
      properties:
        name:
          type: string
          nullable: true
        date:
          type: string
          format: date-time
        id:
          type: integer
          format: int64
          nullable: true
        scheduleId:
          type: integer
          format: int32
        result:
          type: string
          nullable: true
        message:
          type: string
          nullable: true
        expiryTime:
          type: string
          format: date-time
        logFileName:
          type: string
          nullable: true
      additionalProperties: false
    ScheduleBuildActionSchedule:
      type: object
      properties:
        id:
          type: integer
          format: int32
          nullable: true
        name:
          type: string
          nullable: true
      additionalProperties: false
    ScheduleBuildAction:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ApiError'
          nullable: true
        properties:
          type: array
          items:
            $ref: '#/components/schemas/InstanceProperty'
          nullable: true
        requests:
          type: array
          items:
            $ref: '#/components/schemas/ScheduleBuildRequest'
          nullable: true
        schedules:
          type: array
          items:
            $ref: '#/components/schemas/ScheduleBuildActionSchedule'
          nullable: true
        action:
          type: string
          nullable: true
        id:
          type: integer
          format: int32
        result:
          type: string
          nullable: true
        message:
          type: string
          nullable: true
        requestIds:
          type: array
          items:
            type: integer
            format: int64
          nullable: true
        expiryTime:
          type: string
          format: date-time
        userId:
          type: integer
          format: int32
        dates:
          type: array
          items:
            type: string
          nullable: true
        logFile:
          type: string
          nullable: true
        overwrite:
          type: boolean
        resourceName:
          type: string
          nullable: true
          readOnly: true
        namedInstance:
          type: string
          nullable: true
        machineName:
          type: string
          nullable: true
        hold:
          type: boolean
      additionalProperties: false
    HtmlDocumentation:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ApiError'
          nullable: true
        properties:
          type: array
          items:
            $ref: '#/components/schemas/AuxillaryProperty'
          nullable: true
        rootDocUrl:
          type: string
          nullable: true
        resourceName:
          type: string
          nullable: true
          readOnly: true
      additionalProperties: false
    PasswordPolicy:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ApiError'
          nullable: true
        properties:
          type: array
          items:
            $ref: '#/components/schemas/AuxillaryProperty'
          nullable: true
        minimumCharacters:
          type: integer
          format: int32
          nullable: true
        numericRequired:
          type: boolean
          nullable: true
        alphaRequired:
          type: boolean
          nullable: true
        specialCharacterRequired:
          type: boolean
          nullable: true
        repeatedCharacterOccurrencesAllowed:
          type: integer
          format: int32
          nullable: true
        minimumNumberOfLowerCaseCharacters:
          type: integer
          format: int32
          nullable: true
        minimumNumberOfUpperCaseCharacters:
          type: integer
          format: int32
          nullable: true
        minimumNumberOfDaysToChangePassword:
          type: integer
          format: int32
          nullable: true
        daysValid:
          type: integer
          format: int32
          nullable: true
        daysBeforeExpirationToWarn:
          type: integer
          format: int32
          nullable: true
        numberOfPasswordsToRetain:
          type: integer
          format: int32
          nullable: true
        attemptsBeforeAccountLock:
          type: integer
          format: int32
          nullable: true
        resourceName:
          type: string
          nullable: true
          readOnly: true
      additionalProperties: false
    VisionSettings:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ApiError'
          nullable: true
        properties:
          type: array
          items:
            $ref: '#/components/schemas/AuxillaryProperty'
          nullable: true
        visionPastProcessingDays:
          type: integer
          format: int32
        visionFutureProcessingDays:
          type: integer
          format: int32
        visionHistoryDaysToKeep:
          type: integer
          format: int32
        resourceName:
          type: string
          nullable: true
          readOnly: true
      additionalProperties: false
    ServerSetting:
      type: object
      properties:
        configKey:
          type: string
          nullable: true
        configValue:
          type: string
          nullable: true
      additionalProperties: false
    ServerOptions:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ApiError'
          nullable: true
        properties:
          type: array
          items:
            $ref: '#/components/schemas/AuxillaryProperty'
          nullable: true
        enableWindowsAuthentication:
          type: boolean
          nullable: true
        numberOfDaysToKeepServiceRequestExecutions:
          type: integer
          format: int32
          nullable: true
        htmlDocumentation:
          $ref: '#/components/schemas/HtmlDocumentation'
        passwordPolicy:
          $ref: '#/components/schemas/PasswordPolicy'
        visionSettings:
          $ref: '#/components/schemas/VisionSettings'
        solutionManagerSettings:
          type: string
          nullable: true
        ticketingSystemName:
          type: string
          nullable: true
        loginSecureMessage:
          type: string
          nullable: true
        settings:
          type: array
          items:
            $ref: '#/components/schemas/ServerSetting'
          nullable: true
        resourceName:
          type: string
          nullable: true
          readOnly: true
      additionalProperties: false
    VariableTextType:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ApiError'
          nullable: true
        properties:
          type: array
          items:
            $ref: '#/components/schemas/AuxillaryProperty'
          nullable: true
        minCharacters:
          type: integer
          format: int32
          nullable: true
        maxCharacters:
          type: integer
          format: int32
          nullable: true
        invalidCharacters:
          type: string
          nullable: true
        stripCharacters:
          type: string
          nullable: true
        paddingDirection:
          type: string
          nullable: true
        paddingCharacter:
          type: string
          nullable: true
        paddingLength:
          type: integer
          format: int32
          nullable: true
        password:
          type: boolean
        regExpression:
          type: string
          nullable: true
        regExpressionErrorMsg:
          type: string
          nullable: true
        resourceName:
          type: string
          nullable: true
          readOnly: true
      additionalProperties: false
    VariableNumberType:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ApiError'
          nullable: true
        properties:
          type: array
          items:
            $ref: '#/components/schemas/AuxillaryProperty'
          nullable: true
        minimum:
          type: integer
          format: int64
          nullable: true
        maximum:
          type: integer
          format: int64
          nullable: true
        resourceName:
          type: string
          nullable: true
          readOnly: true
      additionalProperties: false
    VariableDateType:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ApiError'
          nullable: true
        properties:
          type: array
          items:
            $ref: '#/components/schemas/AuxillaryProperty'
          nullable: true
        beforeToday:
          type: boolean
        afterToday:
          type: boolean
        beforeDate:
          type: string
          nullable: true
        afterDate:
          type: string
          nullable: true
        format:
          type: string
          nullable: true
        resourceName:
          type: string
          nullable: true
          readOnly: true
      additionalProperties: false
    VariableTextCollectionType:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ApiError'
          nullable: true
        properties:
          type: array
          items:
            $ref: '#/components/schemas/AuxillaryProperty'
          nullable: true
        disallowDuplicate:
          type: boolean
        delimiter:
          type: string
          nullable: true
        minCharacters:
          type: integer
          format: int32
          nullable: true
        maxCharacters:
          type: integer
          format: int32
          nullable: true
        invalidCharacters:
          type: string
          nullable: true
        regExpression:
          type: string
          nullable: true
        regExpressionErrorMsg:
          type: string
          nullable: true
        resourceName:
          type: string
          nullable: true
          readOnly: true
      additionalProperties: false
    VariableMasterJobType:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ApiError'
          nullable: true
        properties:
          type: array
          items:
            $ref: '#/components/schemas/AuxillaryProperty'
          nullable: true
        scheduleName:
          type: string
          nullable: true
        resourceName:
          type: string
          nullable: true
          readOnly: true
      additionalProperties: false
    ChoiceTypeValues:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ApiError'
          nullable: true
        properties:
          type: array
          items:
            $ref: '#/components/schemas/AuxillaryProperty'
          nullable: true
        caption:
          type: string
          nullable: true
        value:
          type: string
          nullable: true
        resourceName:
          type: string
          nullable: true
          readOnly: true
      additionalProperties: false
    VariableChoiceType:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ApiError'
          nullable: true
        properties:
          type: array
          items:
            $ref: '#/components/schemas/AuxillaryProperty'
          nullable: true
        items:
          type: array
          items:
            $ref: '#/components/schemas/ChoiceTypeValues'
          nullable: true
        resourceName:
          type: string
          nullable: true
          readOnly: true
      additionalProperties: false
    ServiceRequestVariable:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ApiError'
          nullable: true
        properties:
          type: array
          items:
            $ref: '#/components/schemas/AuxillaryProperty'
          nullable: true
        variableTypes:
          type: string
          nullable: true
        label:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        required:
          type: boolean
        text:
          $ref: '#/components/schemas/VariableTextType'
        number:
          $ref: '#/components/schemas/VariableNumberType'
        date:
          $ref: '#/components/schemas/VariableDateType'
        textCollection:
          $ref: '#/components/schemas/VariableTextCollectionType'
        masterJob:
          $ref: '#/components/schemas/VariableMasterJobType'
        choice:
          $ref: '#/components/schemas/VariableChoiceType'
        resourceName:
          type: string
          nullable: true
          readOnly: true
      additionalProperties: false
    IJsFunction:
      type: object
      additionalProperties: false
    SelfServiceRequest:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ApiError'
          nullable: true
        properties:
          type: array
          items:
            $ref: '#/components/schemas/AuxillaryProperty'
          nullable: true
        confirmed:
          type: boolean
        sendAsOcadm:
          type: boolean
        events:
          type: array
          items:
            type: string
          nullable: true
        trackEventExecutions:
          type: boolean
        variables:
          type: array
          items:
            $ref: '#/components/schemas/ServiceRequestVariable'
          nullable: true
        skipValidationForChoiceItems:
          type: boolean
        matchingVariables:
          type: boolean
        resourceName:
          type: string
          nullable: true
          readOnly: true
        jsFunctions:
          $ref: '#/components/schemas/IJsFunction'
      additionalProperties: false
    ServiceRequestControl:
      type: object
      properties:
        state:
          type: string
          nullable: true
        errorMessage:
          type: string
          nullable: true
      additionalProperties: false
    ServiceRequest:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ApiError'
          nullable: true
        properties:
          type: array
          items:
            $ref: '#/components/schemas/AuxillaryProperty'
          nullable: true
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        documentation:
          type: string
          nullable: true
        html:
          type: string
          nullable: true
        request:
          $ref: '#/components/schemas/SelfServiceRequest'
        details:
          type: string
          nullable: true
        disabled:
          $ref: '#/components/schemas/ServiceRequestControl'
        disableRule:
          type: string
          nullable: true
        hidden:
          $ref: '#/components/schemas/ServiceRequestControl'
        hideRule:
          type: string
          nullable: true
        serviceRequestCategory:
          $ref: '#/components/schemas/ServiceRequestCategory'
        roles:
          type: array
          items:
            $ref: '#/components/schemas/Role'
          nullable: true
        resourceName:
          type: string
          nullable: true
          readOnly: true
      additionalProperties: false
    ServiceRequestCategory:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ApiError'
          nullable: true
        properties:
          type: array
          items:
            $ref: '#/components/schemas/AuxillaryProperty'
          nullable: true
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        color:
          type: string
          nullable: true
        serviceRequests:
          type: array
          items:
            $ref: '#/components/schemas/ServiceRequest'
          nullable: true
        resourceName:
          type: string
          nullable: true
          readOnly: true
      additionalProperties: false
    OpConRequest:
      type: object
      properties:
        id:
          type: integer
          format: int64
          nullable: true
        requestTimeStamp:
          type: string
          format: date-time
          nullable: true
        sourceDescription:
          type: string
          nullable: true
        sourceName:
          type: string
          nullable: true
        handler:
          type: string
          nullable: true
        type:
          type: string
          nullable: true
        expiryTime:
          type: string
          format: date-time
          nullable: true
        details:
          type: string
          nullable: true
        processed:
          type: integer
          format: int32
        dsn:
          type: string
          nullable: true
      additionalProperties: false
    OpConResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
          nullable: true
        requestTimeStamp:
          type: string
          format: date-time
          nullable: true
        sourceDescription:
          type: string
          nullable: true
        sourceName:
          type: string
          nullable: true
        type:
          type: string
          nullable: true
        expiryTime:
          type: string
          format: date-time
          nullable: true
        details:
          type: string
          nullable: true
      additionalProperties: false
    TextVariable:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ApiError'
          nullable: true
        properties:
          type: array
          items:
            $ref: '#/components/schemas/AuxillaryProperty'
          nullable: true
        value:
          type: string
          nullable: true
        modifiedValue:
          type: string
          nullable: true
        resourceName:
          type: string
          nullable: true
          readOnly: true
      additionalProperties: false
    ChoiceVariable:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ApiError'
          nullable: true
        properties:
          type: array
          items:
            $ref: '#/components/schemas/AuxillaryProperty'
          nullable: true
        value:
          type: string
          nullable: true
        resourceName:
          type: string
          nullable: true
          readOnly: true
      additionalProperties: false
    MasterJobVariable:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ApiError'
          nullable: true
        properties:
          type: array
          items:
            $ref: '#/components/schemas/AuxillaryProperty'
          nullable: true
        value:
          type: string
          nullable: true
        resourceName:
          type: string
          nullable: true
          readOnly: true
      additionalProperties: false
    MasterScheduleVariable:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ApiError'
          nullable: true
        properties:
          type: array
          items:
            $ref: '#/components/schemas/AuxillaryProperty'
          nullable: true
        value:
          type: string
          nullable: true
        resourceName:
          type: string
          nullable: true
          readOnly: true
      additionalProperties: false
    NumberVariable:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ApiError'
          nullable: true
        properties:
          type: array
          items:
            $ref: '#/components/schemas/AuxillaryProperty'
          nullable: true
        value:
          type: integer
          format: int32
          nullable: true
        resourceName:
          type: string
          nullable: true
          readOnly: true
      additionalProperties: false
    DateVariable:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ApiError'
          nullable: true
        properties:
          type: array
          items:
            $ref: '#/components/schemas/AuxillaryProperty'
          nullable: true
        value:
          type: string
          nullable: true
        formattedDateValue:
          type: string
          nullable: true
        resourceName:
          type: string
          nullable: true
          readOnly: true
      additionalProperties: false
    TextCollectionVariable:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ApiError'
          nullable: true
        properties:
          type: array
          items:
            $ref: '#/components/schemas/AuxillaryProperty'
          nullable: true
        value:
          type: array
          items:
            type: string
          nullable: true
        modifiedValue:
          type: string
          nullable: true
        resourceName:
          type: string
          nullable: true
          readOnly: true
      additionalProperties: false
    SelfServiceVariable:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ApiError'
          nullable: true
        properties:
          type: array
          items:
            $ref: '#/components/schemas/AuxillaryProperty'
          nullable: true
        type:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        text:
          $ref: '#/components/schemas/TextVariable'
        choice:
          $ref: '#/components/schemas/ChoiceVariable'
        masterJob:
          $ref: '#/components/schemas/MasterJobVariable'
        masterSchedule:
          $ref: '#/components/schemas/MasterScheduleVariable'
        number:
          $ref: '#/components/schemas/NumberVariable'
        date:
          $ref: '#/components/schemas/DateVariable'
        textCollection:
          $ref: '#/components/schemas/TextCollectionVariable'
        resourceName:
          type: string
          nullable: true
          readOnly: true
      additionalProperties: false
    JobTracking:
      type: object
      properties:
        id:
          type: string
          nullable: true
        status:
          type: string
          nullable: true
        message:
          type: string
          nullable: true
      additionalProperties: false
    EventExecution:
      type: object
      properties:
        status:
          type: string
          nullable: true
        listOfStatus:
          type: array
          items:
            type: string
          nullable: true
        message:
          type: string
          nullable: true
        jobs:
          type: array
          items:
            $ref: '#/components/schemas/JobTracking'
          nullable: true
      additionalProperties: false
    ServiceRequestExecution:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ApiError'
          nullable: true
        properties:
          type: array
          items:
            $ref: '#/components/schemas/AuxillaryProperty'
          nullable: true
        id:
          type: integer
          format: int32
        serviceRequestId:
          type: integer
          format: int32
          readOnly: true
        executionStatus:
          type: string
          nullable: true
        details:
          type: string
          nullable: true
        submitAsOcadm:
          type: boolean
          nullable: true
        requestTs:
          type: string
          format: date-time
          nullable: true
        requestTimeStamp:
          type: string
          nullable: true
        lastUpdateTs:
          type: string
          format: date-time
          nullable: true
        lastUpdateTimeStamp:
          type: string
          nullable: true
        user:
          $ref: '#/components/schemas/User'
        serviceRequest:
          $ref: '#/components/schemas/ServiceRequest'
        opconRequests:
          type: array
          items:
            $ref: '#/components/schemas/OpConRequest'
          nullable: true
        opconResponses:
          type: array
          items:
            $ref: '#/components/schemas/OpConResponse'
          nullable: true
        variables:
          type: array
          items:
            $ref: '#/components/schemas/SelfServiceVariable'
          nullable: true
        completedCount:
          type: integer
          format: int32
          nullable: true
        totalCount:
          type: integer
          format: int32
          nullable: true
        eventExecutions:
          type: array
          items:
            $ref: '#/components/schemas/EventExecution'
          nullable: true
        trackEvent:
          type: boolean
        resourceName:
          type: string
          nullable: true
          readOnly: true
      additionalProperties: false
    SolutionManagerSettings:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ApiError'
          nullable: true
        properties:
          type: array
          items:
            $ref: '#/components/schemas/AuxillaryProperty'
          nullable: true
        id:
          type: integer
          format: int32
        roleId:
          type: integer
          format: int32
          nullable: true
        userId:
          type: integer
          format: int32
          nullable: true
        name:
          type: string
          nullable: true
        value:
          type: string
          nullable: true
        userCanWrite:
          type: boolean
          nullable: true
        isPublic:
          type: boolean
          nullable: true
        resourceName:
          type: string
          nullable: true
          readOnly: true
      additionalProperties: false
    CardTrackId:
      type: object
      properties:
        cardId:
          type: integer
          format: int32
        trackId:
          type: string
          format: uuid
        cardPath:
          type: string
          nullable: true
      additionalProperties: false
  securitySchemes:
    Token:
      type: apiKey
      description: "Enter 'Token [space] {your token}' in the text input below.  \n  \nExample: **Token 1234-5abc-def**"
      name: Authorization
      in: header
security:
  - Token: [ ]
